// FOS Server
// Author: Dagnir

//#include "Tla"

void _MapInit( Map map, bool firstTime )
{
    Critter[] critters = {};
    Obsolete::GetCritters( map,  0, FIND_LIFE | FIND_ONLY_NPC, critters  );

    for( uint i = 0; i < critters.length(); i++ )
    {
        critters[ i ].ReplicationTime = 480;
        Critter cr;
        cr = critters[ i ];
        if( valid( cr ) )
        {
            hash dialog = cr.DialogId;
            if( dialog == Content::Dialog::atoll_trader )
                cr.IsBarterOnlyCash = true;
        }
    }
}

// rifleman17
// Торговцы на Атолле. Периодически получают лут из таблицы atollLoot.
// Предметы появляются группами, это позволяет настроить появление оружия и патронов к нему, например.

#define CTE_REFRESH    ( 17 )

uint[][][] atollLoot =
/*       Время до следующей генерации предметов, в реальных минутах
         Код предмета,                        Кол-воОт, Кол-воДо, Шанс%*/
{
    /* Начало описания одной группы товаров */
    {
        { 120 },                                                                     /* Первой строкой указано время следующего обновления товара у торговца в реальных минутах*/
        { Content::Item::combat_armor,                    0,       1,         100 }, /* Далее идет описание товаров в составе группы */
        { Content::Item::pk12_gauss_pistol,               1,       1,         100 },
        { Content::Item::_2mm_ec_ammo,                     100,     1,         100 },
        { Content::Item::mentats,                         2,       5,         100 }
    },    /* {Хвост описания одной группы товаров */
    {
        { 240 },
        { Content::Item::explosive_rocket,                20,      35,        100 },
        { Content::Item::pulse_grenade,                   6,       8,         100 },
        { Content::Item::rocket_launcher,                 1,       1,         100 },
        { Content::Item::louisville_slugger,              1,       2,         100 }
    },
    {
        { 360 },
        { Content::Item::mega_power_fist,                 1,       3,         100 },
        { Content::Item::brotherhood_combat_armor,        0,       1,         100 },
        { Content::Item::_7_62mm_ammo,                     300,     500,       100 },
        { Content::Item::small_energy_cell,               400,     500,       100 },
        { Content::Item::fn_fal_night_scope,              1,       1,         100 }
    },
    {
        { 240 },
        { Content::Item::m72_gauss_rifle,                 1,       1,         100 },
        { Content::Item::_2mm_ec_ammo,                     200,     300,       100 }
    },
    {
        { 240 },
        { Content::Item::super_stimpak,                   5,       15,        25 },
        { Content::Item::super_stimpak,                   5,       5,         100 },
        { Content::Item::stimpak,                         20,      30,        100 }
    },
    {
        { 1000 },
        { Content::Item::powered_armor,                   1,       1,         10 },       /* Шанс появления = 10%/число строк таблицы  */
        { Content::Item::turbo_plasma_rifle,              1,       1,         100 },
        { Content::Item::micro_fusion_cell,               200,     400,       100 }
    },
    {
        { 120 },
        { Content::Item::plasma_pistol,                   1,       2,         50 },
        { Content::Item::small_energy_cell,               200,     300,       50 }
    },
    {
        { 480 },
        { Content::Item::yk42b_pulse_rifle,               1,       2,         25 },
        { Content::Item::_4_7mm_caseless,                  400,     500,       50 }
    },
    {
        { 120 },
        { Content::Item::magneto_laser_pistol,            1,       2,         50 },
        { Content::Item::small_energy_cell,               100,     100,       50 }
    },
    {
        { 120 },
        { Content::Item::metal_armor_mk_ii,               1,       1,         50 },
        { Content::Item::hk_g11e,                         1,       1,         100 },
        { Content::Item::_4_7mm_caseless,                  200,     400,       100 }
    }
};


void _AtollTraderInit( Critter cr, bool firstTime )
{
    cr.SkillBarter = 200;
    cr.IsNoItemGarbager = true;
    ;
    cr.IsNoBarter = false;
    cr.IsNoDrop = true;
    cr.IsNoSteal = true;
    cr.IsNoLoot = true;
    cr.IsNoEnemyStack = true;
    cr.IsBarterOnlyCash = true;
    if( cr.GetTimeEvents( CTE_REFRESH, null, null, null ) == 0 )
        cr.AddTimeEvent( cte_RefreshBag, 0, CTE_REFRESH );
}

uint cte_RefreshBag( Critter cr, int identifier, uint& rate )
{
    uint idx = Random( 0, atollLoot.length() - 1 );
    uint timeNext = atollLoot[ idx ][ 0 ][ 0 ];
    int  chance = 0;
    int  qty = 0;
    Item[] items = {};
    if( Obsolete::GetItems( cr, -1, items ) > 0 )
    {
        for( uint i = 0, l = items.length(); i < l; i++ )
        {
            DeleteItem( items[ i ] );
        }
    }
    for( uint i = 1, l = atollLoot[ idx ].length(); i < l; i++ )
    {
        chance = atollLoot[ idx ][ i ][ 3 ];
        if( chance >= 100 || ( Random( 0, 99 ) < chance ) )
        {
            qty = Random( atollLoot[ idx ][ i ][ 1 ], atollLoot[ idx ][ i ][ 2 ] );
            if( qty > 0 )
            {
                cr.AddItem( atollLoot[ idx ][ i ][ 0 ], qty );
            }
        }
    }
    return REAL_HOUR( timeNext );
}
