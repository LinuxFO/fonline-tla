// FOS Server Client


#pragma rpc Server Rpc_CritterToGlobal (int )

#ifdef __SERVER


// игрок с включенным NoPvp режимом может телепортироваться на глобал
void Rpc_CritterToGlobal (Critter  player, int)
 
{
    player.Wait( 1000 );   // Антиспам

    if( IS_TIMEOUT( player.TimeoutBattle ) )
    {
        player.SayMsg( SAY_NETMSG, TEXTMSG_GAME, MsgStr::StrTimeoutBattleWait );
        return;
    }

    Map map = player.GetMap();
    if( valid( map ) && IsNoPvpMap( map ) && player.IsNoPvp && player.IsLife() )
        player.TransitToGlobal();
    else
        player.SayMsg( SAY_NETMSG, TEXTMSG_GAME, MsgStr::StrUseNothing );
}

#pragma property Map PrivateServer bool IsNoPvPMap

// Author: rifleman17
// NoPvp режим для некоторых карт на сервере
// Если включен при первом запуске, нежелательно отключать без вайпа, иначе смешаются пвп и нопвп персонажи

const hash[] noPvpMaps =
{
    Content::Map::arroyo_temple_entrance,
    Content::Map::arroyo, Content::Map::arroyo_garden, Content::Map::arroyo_bridge, Content::Map::arroyo_temple,
    Content::Map::den, Content::Map::klamath, Content::Map::klamath_mall,
    Content::Map::vcity_courtyard, Content::Map::vcity, Content::Map::modoc, Content::Map::vcity_vault_1,
    Content::Map::vcity_vault_2, Content::Map::vcity_vault_3,  Content::Map::v15_village, Content::Map::ncr_downtown,
    Content::Map::ncr_council, Content::Map::ncr_ranch, Content::Map::ncr_bazaar,  Content::Map::redding_outer, Content::Map::redding_miners,
    Content::Map::redding_lost, Content::Map::primal_tribe,
    Content::Map::broken, Content::Map::broken_basement,
    Content::Map::sf_tanker, Content::Map::sf_china, Content::Map::sf_shuttle, Content::Map::sf_shi, Content::Map::sf_hubb, Content::Map::sf_tanker3, Content::Map::sf_emp, Content::Map::sf_bro,
    Content::Map::repl_bank_den, Content::Map::repl_bank_klamath, Content::Map::repl_bank_redding, Content::Map::repl_bank_modoc, Content::Map::repl_bank_newreno,
    Content::Map::repl_bank_gecko, Content::Map::repl_bank_broken, Content::Map::repl_bank_ncr, Content::Map::repl_bank_sf, Content::Map::repl_bank_vcity,
    Content::Map::repl1, Content::Map::repl2, Content::Map::repl3, Content::Map::repl4, Content::Map::barter_ground
};

/*
   const       hash[] noPvpMaps = { Content::Map::klamath, Content::Map::klamath_mall, Content::Map::barter_ground };
 */
const int[] excludeDialogs =
{
    Content::Dialog::mod_aureliano, Content::Dialog::arroyo_gayzum, Content::Dialog::arroyo_laumer, Content::Dialog::arroyo_selma, Content::Dialog::vc_mutant_charley, Content::Dialog::ncr_westin, Content::Dialog::ncr_smit, Content::Dialog::sf_citizen_shue, Content::Dialog::vc_shrim, Content::Dialog::vc_kohl, Content::Dialog::vc_randal, Content::Dialog::vc_ed, Content::Dialog::sf_kuraru, Content::Dialog::sf_bruce, Content::Dialog::sf_khung, Content::Dialog::sf_wei, Content::Dialog::sf_imbot, Content::Dialog::sf_master_khung, Content::Dialog::sf_kuraru, Content::Dialog::redd_wade, Content::Dialog::redd_savinel, Content::Dialog::redd_stanwell, Content::Dialog::ncr_hal,
    Content::Dialog::bh_kit, Content::Dialog::ncr_hate, Content::Dialog::vc_shrim, Content::Dialog::vc_guard_fighter, Content::Dialog::den_ghost
};
const int[] btInvul = { BodyTypes::Men, BodyTypes::Women, BodyTypes::Children, BodyTypes::SuperMutant, BodyTypes::Ghoul };

#define CTE_NOPVP_OFF    ( 42 )                 // Идентификатор события "очистить нопвп режим"
#define TIME_CHECK       ( REAL_MINUTE( 1 ) )   // Время проверки, не вышел ли игрок с нопвп зоны

void OnCitterMapIn( Critter cr, Map map )
{
    cr.IsNoPvp = false;   // перестраховка, по идее это присваивание не нужно, но на всякий случай...
    if( cr.IsPlayer() && IsNoPvpMap( map ) )
    {
        cr.IsNoPvp = true;
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 1 );
        if( cr.GetTimeEvents( CTE_NOPVP_OFF, null, null, null ) == 0 )
            cr.AddTimeEvent( cte_NoPvpOff, TIME_CHECK, CTE_NOPVP_OFF );
    }
}

uint cte_NoPvpOff( Critter cr, int identifier, uint& rate )
{
    if( !cr.IsNoPvp )
        return 0;

    Map map = cr.GetMap();
    if( valid( map ) && IsNoPvpMap( map ) ) // если карта с включенным НоПвп, откладываем снятие режима
        return TIME_CHECK;

    cr.IsNoPvp = false;
    return 0;
}

void OnCritterMapOut( Critter cr, Map map )
{
    Map mapCr = cr.GetMap();
    if( valid( mapCr ) && IsNoPvpMap( mapCr ) )
        return;

    if( __NoPvpMaps && cr.IsPlayer() && cr.IsNoPvp ) // если но пвп карты не включены, персонаж получил нопвп режим другим способом, не отменяем
    {
        cr.IsNoPvp = false;
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 2 );
    }
}

bool IsNoPvpMap( Map map )
{
    if( !__NoPvpMaps )
        return false;
    return map.IsNoPvPMap;
}

void SetNoPvp()
{
    if( !__NoPvpMaps )
        return;

    for( uint i = 0, l = noPvpMaps.length(); i < l; i++ )
    {
        Map map = GetMapByPid( noPvpMaps[ i ], 0 );
        if( valid( map ) )
            SetNoPvp( map, true );
    }
}

// Установка NoPvp режима на карте, действует только при первой загрузке карты
// Присваивается переменная, а также все НПЦ на карте получают режим MODE_INVULNERABLE
void SetNoPvp( Map map, bool firstTime )
{
    if( firstTime )
    {
        hash pidMap = map.ProtoId;
        if( noPvpMaps.exists( pidMap ))
        {
            if( map.IsNoPvPMap )
                return;

            map.IsNoPvPMap = true;
            Critter[] critters = {};
            if( Obsolete::GetCritters( map,  0, FIND_ALL | FIND_ONLY_NPC, critters  ) > 0 )
            {
                for( uint i = 0, l = critters.length(); i < l; i++ )
                {
                    Critter cr = critters[ i ];
                    if( !valid( cr ) || !cr.IsNpc() )
                        continue;

                    hash dialog = cr.DialogId;
                    if( excludeDialogs.exists(dialog) )
                        continue;

                    uint bt = cr.BodyType;
                    if( btInvul.exists( bt ) )
                        cr.IsInvulnerable = true;                       // God Mode On
                }
            }
        }
    }
}


#endif
