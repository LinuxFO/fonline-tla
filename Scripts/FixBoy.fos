// FOS Server Client

///@ RemoteCall Server Rpc_CraftItem(int state, int craftId, int p2)
///@ RemoteCall Client ShowFixBoy(int craftId, int strNum, int p2, int[]  data)

#ifdef __SERVER

///@ Property Critter PrivateServer uint FixboyPowerArmor            Max = 1
///@ Property Critter PrivateServer uint ModLourenceVenomedratRecipe Max = 1
///@ Property Critter PrivateServer uint ModLourenceTNTRatRecipe     Max = 1
///@ Property Critter PrivateServer uint NavEmpRocketRecipe          Max = 1
///@ Property Critter PrivateServer uint FixboyDefault               Max = 1
///@ Property Critter PrivateServer uint SFRecipeSsupersledge        Max = 1
///@ Property Critter PrivateServer uint SFRecipePlasmagrenades      Max = 1
///@ Property Critter PrivateServer uint Fixboy700NitroExpress       Max = 1
///@ Property Critter PrivateServer uint FixboyAmmoPressOperator     Max = 1

#define FIX_SUCCESS      (FIXBOY_DEFAULT)
#define FIX_FAIL         (FIXBOY_DEFAULT ^ FIXBOY_ALLOW_CRAFT)
#define GAME_DAY_MINUTES #(days)(days * 60 * 24)

funcdef int MainCraftScript(Critter cr, int state, MainCraft craft);

MainCraft[] CraftList = {};

class MainCraft
{
    uint Id;
    hstring[] OutItems = {};
    uint Experience;
    MainCraftScript Script;
    int[] NeedResources = {};
    int[] NeedTools = {};
    int[] OnView = {};
    int[] OnCraft = {};

    MainCraft(uint id, hstring pid, uint count, uint exp = 50)
    {
        Id = id;
        OutItems = array<int> = {pid, count};
        Experience = exp;
    }

    MainCraft AddMoreOutItems(hstring pid, uint count)
    {
        OutItems.insertLast(pid);
        OutItems.insertLast(count);
        return this;
    }

    MainCraft AddNeedResources(int[] arr)
    {
        NeedResources = arr;
        return this;
    }

    MainCraft AddNeedTools(int[] arr)
    {
        NeedTools = arr;
        return this;
    }

    MainCraft AddCheckOnView(int[] arr)
    {
        OnView = arr;
        return this;
    }

    MainCraft AddCheckOnCraft(int[] arr)
    {
        OnCraft = arr;
        return this;
    }

    MainCraft SetScript(MainCraftScript script)
    {
        @Script = script;
        return this;
    }

    bool CheckOnView(Critter cr)
    {
        uint i = 0;
        while (i < OnView.length()) {
            CritterProperty prop = CritterProperty(OnView[i++]);
            int value = OnView[i++];
            int valCr = cr.GetAsInt(prop);
            if (valCr < value)
                return false;
        }
        if (Script !is null && Script(cr, Tla::FixboyList, this) == FIX_FAIL)
            return false;

        return true;
    }

    bool CheckOnCraft(Critter cr)
    {
        uint i = 0;
        while (i < OnView.length()) {
            CritterProperty prop = CritterProperty(OnCraft[i++]);
            int value = OnCraft[i++];
            int valCr = cr.GetAsInt(prop);
            if (valCr < value)
                return false;
        }

        i = 0;
        while (i < NeedResources.length()) {
            hstring pid = NeedResources[i++];
            uint count = NeedResources[i++];
            bool ors = NeedResources[i++] == 1;
            if (!ors) {
                if (cr.CountItem(pid) < count)
                    return false;
            }
            else {
                uint[] pids = {pid};
                uint[] counts = {count};

                while (i < NeedResources.length()) {
                    pids.insertLast(NeedResources[i++]);
                    counts.insertLast(NeedResources[i++]);
                    if (NeedResources[i++] != 1)
                        break;
                }
                for (uint j = 0; j < pids.length(); j++)
                    if (cr.CountItem(pids[i]) < counts[i])
                        return false;
            }
        }

        i = 0;
        while (i < NeedTools.length()) {
            hstring pid = hstring(NeedTools[i++]);
            uint count = NeedTools[i++];
            bool ors = NeedTools[i++] == 1;
            if (!ors) {
                if (cr.CountItem(pid) < count)
                    return false;
            }
            else {
                uint[] pids = {pid};
                uint[] counts = {count};

                while (i < NeedTools.length()) {
                    pids.insertLast(NeedTools[i++]);
                    counts.insertLast(NeedTools[i++]);
                    if (NeedTools[i++] != 1)
                        break;
                }
                for (uint j = 0; j < pids.length(); j++) {
                    if (cr.CountItem(pids[j]) < counts[j])
                        return false;
                    else
                        break;
                }
            }
        }
        if (Script !is null && Script(cr, Tla::FixboyButton, this) == FIX_FAIL)
            return false;

        return true;
    }

    bool CraftedItem(Critter cr)
    {
        if (!CheckOnCraft(cr))
            return false;

        if (Script !is null && Script(cr, Tla::FixboyCraft, this) == FIX_FAIL)
            return false;
        uint i = 0;
        while (i < NeedResources.length()) {
            hstring pid = NeedResources[i++];
            uint count = NeedResources[i++];
            bool ors = NeedResources[i++] == 1;
            if (!ors)
                cr.DeleteItem(pid, count);
            else {
                bool orIsDelet = false;
                while (i < NeedResources.length()) {
                    if (!orIsDelet) {
                        if (cr.CountItem(pid) > count) {
                            cr.DeleteItem(pid, count);
                            orIsDelet = true;
                        }
                    }
                    pid = NeedResources[i++];
                    count = NeedResources[i++];
                    ors = NeedResources[i++] == 1;
                    if (!ors)
                        break;
                }
            }
        }

        i = 0;
        while (i < OutItems.length()) {
            hstring pid = OutItems[i++];
            uint count = OutItems[i++];
            cr.AddItem(pid, count);
        }

        cr.Experience = Experience;
        return true;
    }
};

MainCraft GetCraft(uint id)
{
    for (uint i = 0; i < CraftList.length(); i++)
        if (CraftList[i].Id == id)
            return CraftList[i];
    return null;
}

void ModuleInit()
{
    uint id = 1;
    MainCraft craft = MainCraft(id++, Content::Item::leather_armor, 1, 150)
                          .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 60})
                          .AddNeedResources(array<int> = {Content::Item::brahmin_skin, 2, 0, Content::Item::pocket_lint, 1, 0, Content::Item::rope, 1, 0})
                          .AddNeedTools(array<int> = {Content::Item::knife, 1, 1, Content::Item::throwing_knife, 1, 1, Content::Item::combat_knife, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::leather_armor_mk_ii, 1, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 70})
                .AddNeedResources(array<int> = {Content::Item::leather_armor, 1, 0, Content::Item::brahmin_skin, 1, 0, Content::Item::chemicals, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::combat_knife, 1, 1, Content::Item::knife, 1, 1, Content::Item::throwing_knife, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::chitin_armor, 1, 800)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 110, CritterProperty::SkillOutdoorsman, 100, CritterProperty::Intellect, 6})
                .AddNeedResources(array<int> = {Content::Item::radscorpion_parts,
                                                8,
                                                0,
                                                Content::Item::chemicals,
                                                1,
                                                0,
                                                Content::Item::rags,
                                                1,
                                                0,
                                                Content::Item::metal_trash,
                                                2,
                                                0,
                                                Content::Item::leather_armor,
                                                1,
                                                0,
                                                Content::Item::bottle_full,
                                                1,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0})
                .SetScript(fix_ChitinArmor);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::cured_leather_armor, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 70})
                .AddNeedResources(array<int> = {Content::Item::leather_jacket,
                                                1,
                                                0,
                                                Content::Item::brahmin_skin,
                                                2,
                                                0,
                                                Content::Item::golden_gecko_pelt,
                                                2,
                                                0,
                                                Content::Item::pocket_lint,
                                                1,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::shiv, 1, 1, Content::Item::combat_knife, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::metal_armor, 1, 400)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 80})
                .AddNeedResources(
                    array<int> =
                        {Content::Item::metal_trash, 4, 0, Content::Item::pump_parts, 1, 0, Content::Item::leather_armor, 1, 0, Content::Item::welding, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::metal_armor_mk_ii, 1, 350)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 60})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 100})
                .AddNeedResources(array<int> = {Content::Item::metal_armor, 1, 0, Content::Item::metal_trash, 2, 0, Content::Item::welding, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::mouse_skin, 1, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::tesla_armor, 1, 450)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 50, CritterProperty::SkillScience, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 130, CritterProperty::SkillScience, 150})
                .AddNeedResources(array<int> = {Content::Item::metal_armor_mk_ii,
                                                1,
                                                0,
                                                Content::Item::metal_trash,
                                                2,
                                                0,
                                                Content::Item::pump_parts,
                                                4,
                                                0,
                                                Content::Item::v15_computer_part,
                                                3,
                                                0,
                                                Content::Item::micro_fusion_cell,
                                                50,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::big_book_of_science, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::hardened_power_armor, 1, 500)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 120})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 80, CritterProperty::SkillRepair, 150, CritterProperty::Strength, 8})
                .AddNeedResources(array<int> = {Content::Item::powered_armor,
                                                1,
                                                0,
                                                Content::Item::bottle_full,
                                                10,
                                                0,
                                                Content::Item::firewood,
                                                5,
                                                0,
                                                Content::Item::welding,
                                                3,
                                                0,
                                                Content::Item::metal_trash,
                                                2,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::sledgehammer,
                                            1,
                                            0,
                                            Content::Item::technical_manual,
                                            1,
                                            0,
                                            Content::Item::big_book_of_science,
                                            1,
                                            0,
                                            Content::Item::deans_electronics,
                                            1,
                                            0,
                                            Content::Item::super_tool_kit,
                                            1,
                                            0})
                .SetScript(fix_PowerArmor);
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::shotgun_shells, 40, 100)
            .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 80})
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 90, CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillRepair, 80})
            .AddNeedResources(
                array<int> =
                    {Content::Item::gunpowder, 2, 0, Content::Item::cats_paw, 1, 0, Content::Item::real_bottle_caps, 40, 0, Content::Item::pump_parts, 2, 0})
            .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_10mm_jhp, 20, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::_10mm_ap, 20, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_5mm_jhp, 20, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::_5mm_ap, 20, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_44_magnum_jhp, 20, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::_44_fmj_magnum, 20, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_10mm_jhp, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_10mm_ap, 20, 150)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::steel, 1, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_44_magnum_jhp, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_44_fmj_magnum, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_14mm_ap, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::steel, 1, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_223_fmj, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_5mm_jhp, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_5mm_ap, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::steel, 1, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_45_caliber_ammo, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_7_62mm_ammo, 20, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 2, 0})
                .SetScript(fix_AnyRounds);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_700_nitro_express, 1, 150)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 80, CritterProperty::SkillScience, 80, CritterProperty::SkillRepair, 80})
                .AddNeedResources(array<int> = {Content::Item::gunpowder, 1, 0, Content::Item::metal_trash, 1, 0})
                .SetScript(fix_NitroExpressRounds);
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::emp_rocket, 1, 300)
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 150, CritterProperty::SkillRepair, 100})
            .AddNeedResources(array<int> = {Content::Item::explosive_rocket, 1, 0, Content::Item::pulse_grenade, 1, 0, Content::Item::v15_computer_part, 3, 0})
            .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0, Content::Item::deans_electronics, 1, 0})
            .SetScript(fix_EmpRocket);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::molotov_cocktail, 1, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 30, CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::rot_gut, 1, 0, Content::Item::rags, 1, 0, Content::Item::broc_flower, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::molotov_cocktail, 1, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 30, CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::bottle_glass, 1, 0, Content::Item::rags, 1, 0, Content::Item::flamethrower_fuel, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::flamethrower_fuel, 10, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::flamethrower_fuel, 1, 0, Content::Item::chemicals, 1, 0, Content::Item::pump_parts, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::flamethrower_fuel, 30, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 50, CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::welding, 1, 0, Content::Item::chemicals, 2, 0, Content::Item::pump_parts, 2, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::flamethrower_fuel_mk_ii, 5, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 50, CritterProperty::SkillScience, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 60, CritterProperty::SkillRepair, 80})
                .AddNeedResources(array<int> = {Content::Item::flamethrower_fuel, 5, 0, Content::Item::metal_trash, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::scoped_hunting_rifle, 1, 120)
                .AddCheckOnView(array<int> = {CritterProperty::SkillSmallGuns, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 60, CritterProperty::SkillSmallGuns, 60, CritterProperty::SkillScience, 30})
                .AddNeedResources(array<int> = {Content::Item::hunting_rifle, 1, 0, Content::Item::spectacles, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::guns_and_bullets, 1, 0, Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::assault_rifle_ext_mag, 1, 120)
                .AddCheckOnView(array<int> = {CritterProperty::SkillSmallGuns, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 70})
                .AddNeedResources(array<int> = {Content::Item::assault_rifle, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::shotgun, 1, 150)
            .AddCheckOnView(array<int> = {CritterProperty::SkillSmallGuns, 50})
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 50, CritterProperty::SkillRepair, 40})
            .AddNeedResources(
                array<int> = {Content::Item::shotgun_shells, 2, 0, Content::Item::tube, 2, 0, Content::Item::firewood, 1, 0, Content::Item::pump_parts, 2, 0})
            .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::sawed_off_shotgun, 1, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::shotgun, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::desert_eagle_ext_mag, 1, 80)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 60})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 70})
                .AddNeedResources(array<int> = {Content::Item::desert_eagle, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::springer_rifle, 1, 100)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 30, CritterProperty::SkillSmallGuns, 50})
                .AddNeedResources(array<int> = {Content::Item::zip_gun, 1, 0, Content::Item::tube, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::zip_gun, 1, 75)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 20})
                .AddNeedResources(array<int> = {Content::Item::pump_parts, 1, 0, Content::Item::firewood, 1, 0, Content::Item::_10mm_jhp, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::fn_fal_hpfa, 1, 150)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 80, CritterProperty::SkillRepair, 120})
                .AddNeedResources(array<int> = {Content::Item::fn_fal, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::guns_and_bullets, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::mauser_smg, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillSmallGuns, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 80})
                .AddNeedResources(array<int> = {Content::Item::_9mm_mauser, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0, Content::Item::guns_and_bullets, 1, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::_223_pistol, 1, 350)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 60})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 120, CritterProperty::SkillSmallGuns, 80})
                .AddNeedResources(array<int> = {Content::Item::hunting_rifle, 1, 0, Content::Item::_44_magnum_revolver, 1, 0, Content::Item::welding, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::flamer, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 60, CritterProperty::SkillScience, 40})
                .AddNeedResources(array<int> = {Content::Item::welding,
                                                2,
                                                0,
                                                Content::Item::flamethrower_fuel,
                                                5,
                                                0,
                                                Content::Item::metal_trash,
                                                2,
                                                0,
                                                Content::Item::tube,
                                                1,
                                                0,
                                                Content::Item::pump_parts,
                                                2,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::improved_flamethrower, 1, 250)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 100})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 70, CritterProperty::SkillRepair, 100, CritterProperty::SkillBigGuns, 50})
                .AddNeedResources(array<int> = {Content::Item::pump_parts,
                                                2,
                                                0,
                                                Content::Item::metal_trash,
                                                1,
                                                0,
                                                Content::Item::welding,
                                                1,
                                                0,
                                                Content::Item::flamer,
                                                1,
                                                0,
                                                Content::Item::flamethrower_fuel,
                                                5,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::laser_pistol, 1, 205)
                .AddCheckOnView(array<int> = {CritterProperty::SkillEnergyWeapons, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 80, CritterProperty::SkillRepair, 60, CritterProperty::SkillEnergyWeapons, 50})
                .AddNeedResources(array<int> = {Content::Item::small_energy_cell,
                                                20,
                                                0,
                                                Content::Item::metal_trash,
                                                3,
                                                0,
                                                Content::Item::pump_parts,
                                                2,
                                                0,
                                                Content::Item::v15_computer_part,
                                                3,
                                                0,
                                                Content::Item::welding,
                                                1,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::big_book_of_science, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::magneto_laser_pistol, 1, 225)
                .AddCheckOnView(array<int> = {CritterProperty::SkillEnergyWeapons, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillEnergyWeapons, 50, CritterProperty::SkillScience, 100, CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::laser_pistol, 1, 0, Content::Item::v15_computer_part, 5, 0, Content::Item::pump_parts, 2, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::big_book_of_science, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::laser_rifle_ext_cap, 1, 300)
                .AddCheckOnView(array<int> = {CritterProperty::SkillEnergyWeapons, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 90, CritterProperty::SkillScience, 130, CritterProperty::SkillEnergyWeapons, 60})
                .AddNeedResources(array<int> = {Content::Item::laser_rifle, 1, 0, Content::Item::v15_computer_part, 2, 0, Content::Item::pump_parts, 2, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::big_book_of_science, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::plasma_pistol_ext_cart, 1, 280)
                .AddCheckOnView(array<int> = {CritterProperty::SkillEnergyWeapons, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 110, CritterProperty::SkillEnergyWeapons, 60, CritterProperty::SkillRepair, 80})
                .AddNeedResources(array<int> = {Content::Item::plasma_pistol, 1, 0, Content::Item::v15_computer_part, 2, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::turbo_plasma_rifle, 1, 350)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 100, CritterProperty::SkillEnergyWeapons, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 150, CritterProperty::SkillEnergyWeapons, 90, CritterProperty::SkillRepair, 120})
                .AddNeedResources(array<int> = {Content::Item::plasma_rifle,
                                                1,
                                                0,
                                                Content::Item::welding,
                                                1,
                                                0,
                                                Content::Item::v15_computer_part,
                                                8,
                                                0,
                                                Content::Item::pump_parts,
                                                3,
                                                0,
                                                Content::Item::metal_trash,
                                                3,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::big_book_of_science, 1, 0, Content::Item::super_tool_kit, 1, 0});
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::gatling_laser, 1, 400)
            .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 100, CritterProperty::SkillEnergyWeapons, 80})
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 110, CritterProperty::SkillRepair, 120, CritterProperty::SkillEnergyWeapons, 90})
            .AddNeedResources(array<int> = {Content::Item::avenger_minigun,
                                            1,
                                            0,
                                            Content::Item::laser_rifle,
                                            1,
                                            0,
                                            Content::Item::pump_parts,
                                            2,
                                            0,
                                            Content::Item::v15_computer_part,
                                            2,
                                            0})
            .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::big_book_of_science, 1, 0, Content::Item::deans_electronics, 1, 0});
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::yk42b_pulse_rifle, 1, 500)
            .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 100, CritterProperty::SkillEnergyWeapons, 100})
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 150, CritterProperty::SkillEnergyWeapons, 100, CritterProperty::SkillRepair, 120})
            .AddNeedResources(array<int> = {Content::Item::plasma_rifle,
                                            1,
                                            0,
                                            Content::Item::yk32_pulse_pistol,
                                            2,
                                            0,
                                            Content::Item::metal_trash,
                                            2,
                                            0,
                                            Content::Item::v15_computer_part,
                                            2,
                                            0,
                                            Content::Item::micro_fusion_cell,
                                            10,
                                            0})
            .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::big_book_of_science, 1, 0, Content::Item::deans_electronics, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::rat_grenade_venom, 1, 150)
                .AddNeedResources(array<int> = {Content::Item::rat_grenade, 1, 0, Content::Item::supertoxine, 1, 0})
                .SetScript(fix_VenomousRat);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::rat_grenade_tnt, 1, 50)
                .AddNeedResources(array<int> = {Content::Item::insulate_tape, 1, 0, Content::Item::rat_grenade, 1, 0, Content::Item::dynamite, 1, 0})
                .SetScript(fix_TntRat);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::healing_powder, 1, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::broc_flower, 1, 0, Content::Item::xander_root, 1, 0, Content::Item::rags, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::rock, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::antidote, 1, 90)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 40, CritterProperty::SkillDoctor, 20})
                .AddNeedResources(array<int> = {Content::Item::booze, 1, 0, Content::Item::scorpion_tail, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::lighter, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::lockpicks, 1, 10)
                .AddCheckOnView(array<int> = {CritterProperty::SkillLockpick, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillLockpick, 50, CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0, Content::Item::gecko_pelt, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::exp_lockpick_set, 1, 150)
                .AddCheckOnView(array<int> = {CritterProperty::SkillLockpick, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillLockpick, 80, CritterProperty::SkillRepair, 35})
                .AddNeedResources(array<int> = {Content::Item::lockpicks, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::radio, 1, 120)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 80, CritterProperty::SkillRepair, 50})
                .AddNeedResources(array<int> = {Content::Item::v15_computer_part, 1, 0, Content::Item::pump_parts, 1, 0, Content::Item::metal_trash, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0, Content::Item::deans_electronics, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::first_aid_kit, 1, 150)
                .AddCheckOnView(array<int> = {CritterProperty::SkillFirstAid, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillDoctor, 50, CritterProperty::SkillFirstAid, 60, CritterProperty::SkillScience, 20})
                .AddNeedResources(array<int> = {Content::Item::rags,
                                                5,
                                                0,
                                                Content::Item::booze,
                                                1,
                                                0,
                                                Content::Item::antidote,
                                                1,
                                                0,
                                                Content::Item::gecko_pelt,
                                                1,
                                                0,
                                                Content::Item::pocket_lint,
                                                1,
                                                0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::radio, 1, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::vic_radio, 1, 0, Content::Item::v15_computer_part, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::stimpak, 1, 75) // Content::Item::rags 1, 75 )
            .AddCheckOnView(array<int> = {CritterProperty::SkillFirstAid, 30})
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillFirstAid, 80, CritterProperty::SkillScience, 80})
            .AddNeedResources(
                array<int> =
                    {Content::Item::bottle_full, 1, 0, Content::Item::hypodermic_needle, 1, 0, Content::Item::booze, 1, 0, Content::Item::healing_powder, 2, 0})
            .AddNeedTools(array<int> = {Content::Item::lighter, 1, 0, Content::Item::chemistry_manual, 1, 0, Content::Item::first_aid_kit, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::supertoxine, 1, 200)
                .AddNeedResources(array<int> = {Content::Item::danton_poison, 1, 0, Content::Item::scorpion_tail, 1, 0, Content::Item::hypodermic_needle, 1, 0})
                .SetScript(fix_SuperToxine);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::tnt, 3, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 60})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 100})
                .AddNeedResources(array<int> = {Content::Item::chemicals, 2, 0, Content::Item::bottle_full, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::lighter, 1, 0, Content::Item::chemistry_manual, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::frag_grenade, 1, 75)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 100})
                .AddNeedResources(array<int> = {Content::Item::pump_parts, 1, 0, Content::Item::metal_trash, 1, 0, Content::Item::tnt, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::plasma_grenade, 1, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 80, CritterProperty::SkillRepair, 100})
                .AddNeedResources(array<int> = {Content::Item::pump_parts, 1, 0, Content::Item::frag_grenade, 1, 0, Content::Item::small_energy_cell, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0})
                .SetScript(fix_PlasmaGrenade);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::nitroglycerin, 5, 150)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 80, CritterProperty::SkillOutdoorsman, 40})
                .AddNeedResources(array<int> = {Content::Item::meat, 1, 0, Content::Item::chemicals, 2, 0, Content::Item::bottle_full, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::chemistry_manual, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::dynamite, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillTraps, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 30, CritterProperty::SkillTraps, 80, CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::nitroglycerin,
                                                1,
                                                0,
                                                Content::Item::healing_powder,
                                                1,
                                                0,
                                                Content::Item::firewood,
                                                1,
                                                0,
                                                Content::Item::v15_computer_part,
                                                1,
                                                0,
                                                Content::Item::pump_parts,
                                                1,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0, Content::Item::deans_electronics, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::gunpowder, 5, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 50, CritterProperty::SkillScience, 80})
                .AddNeedResources(array<int> = {Content::Item::mineral, 1, 0, Content::Item::chemicals, 1, 0, Content::Item::firewood, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::chemistry_manual, 1, 0, Content::Item::rock, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::hexogen, 3, 150)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 120})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 140, CritterProperty::SkillOutdoorsman, 60})
                .AddNeedResources(
                    array<int> = {Content::Item::buffout, 1, 0, Content::Item::chemicals, 2, 0, Content::Item::bottle_full, 2, 0, Content::Item::rags, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::lighter, 1, 0, Content::Item::chemistry_manual, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::plastic_explosives_dull, 1, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 120})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 60, CritterProperty::SkillRepair, 60})
                .AddNeedResources(array<int> = {Content::Item::pump_parts, 1, 0, Content::Item::hexogen, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::lighter, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::plastic_explosives, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 100})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 130, CritterProperty::SkillTraps, 120})
                .AddNeedResources(array<int> = {Content::Item::plastic_explosives_dull, 1, 0, Content::Item::pump_parts, 1, 0, Content::Item::radio, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0, Content::Item::deans_electronics, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::mine, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillTraps, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillTraps, 130, CritterProperty::SkillRepair, 80, CritterProperty::SkillOutdoorsman, 50})
                .AddNeedResources(array<int> = {Content::Item::hexogen, 1, 0, Content::Item::pump_parts, 2, 0, Content::Item::shotgun_shells, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::ring_boxing_gloves, 1, 150)
                .AddCheckOnView(array<int> = {CritterProperty::SkillUnarmed, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillUnarmed, 50, CritterProperty::SkillOutdoorsman, 40})
                .AddNeedResources(array<int> = {Content::Item::gecko_pelt, 2, 0, Content::Item::pocket_lint, 4, 0})
                .AddNeedTools(array<int> = {Content::Item::shiv, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::ring_plated_boxing_gloves, 1, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillUnarmed, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillUnarmed, 50, CritterProperty::SkillOutdoorsman, 50, CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::ring_boxing_gloves, 1, 0, Content::Item::metal_trash, 2, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::brass_knuckles, 1, 80)
                .AddCheckOnView(array<int> = {CritterProperty::SkillUnarmed, 30})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillUnarmed, 50, CritterProperty::SkillRepair, 20})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::spiked_knuckles, 1, 130)
                .AddCheckOnView(array<int> = {CritterProperty::SkillUnarmed, 30, CritterProperty::SkillRepair, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillUnarmed, 50, CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::brass_knuckles, 1, 0, Content::Item::metal_trash, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::welding, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::cattle_prod, 1, 10)
                .AddCheckOnView(array<int> = {CritterProperty::SkillRepair, 40, CritterProperty::SkillScience, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 60, CritterProperty::SkillScience, 60})
                .AddNeedResources(array<int> = {Content::Item::club,
                                                1,
                                                0,
                                                Content::Item::pump_parts,
                                                2,
                                                0,
                                                Content::Item::small_energy_cell,
                                                10,
                                                0,
                                                Content::Item::v15_computer_part,
                                                2,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::super_cattle_prod, 1, 200)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 60, CritterProperty::SkillRepair, 60})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 100, CritterProperty::SkillRepair, 80})
                .AddNeedResources(array<int> = {Content::Item::cattle_prod, 1, 0, Content::Item::v15_computer_part, 2, 0, Content::Item::pump_parts, 2, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0, Content::Item::deans_electronics, 1, 0, Content::Item::big_book_of_science, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::super_sledge, 1, 300)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillScience, 100, CritterProperty::SkillRepair, 130})
                .AddNeedResources(array<int> = {Content::Item::metal_trash,
                                                2,
                                                0,
                                                Content::Item::pump_parts,
                                                1,
                                                0,
                                                Content::Item::tube,
                                                2,
                                                0,
                                                Content::Item::small_energy_cell,
                                                5,
                                                0,
                                                Content::Item::v15_computer_part,
                                                1,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0})
                .SetScript(fix_SuperSledge);
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::wakizashi_blade, 1, 250)
            .AddCheckOnView(array<int> = {CritterProperty::SkillMeleeWeapons, 100})
            .AddCheckOnCraft(array<int> = {CritterProperty::SkillMeleeWeapons, 130, CritterProperty::SkillRepair, 50, CritterProperty::SkillOutdoorsman, 50})
            .AddNeedResources(
                array<int> =
                    {Content::Item::firewood, 1, 0, Content::Item::metal_trash, 3, 0, Content::Item::gecko_pelt, 1, 0, Content::Item::bottle_full, 3, 0})
            .AddNeedTools(array<int> = {Content::Item::sledgehammer, 1, 0, Content::Item::lighter, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::combat_knife, 1, 100)
                .AddCheckOnView(array<int> = {CritterProperty::SkillMeleeWeapons, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 20, CritterProperty::SkillRepair, 30, CritterProperty::SkillMeleeWeapons, 50})
                .AddNeedResources(array<int> = {Content::Item::knife, 1, 0, Content::Item::gecko_pelt, 1, 0, Content::Item::firewood, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::sledgehammer, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::sledgehammer, 1, 50)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::pump_parts, 1, 0, Content::Item::firewood, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::spear, 1, 80)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 20, CritterProperty::SkillMeleeWeapons, 40})
                .AddNeedResources(array<int> = {Content::Item::knife, 1, 0, Content::Item::rope, 1, 0, Content::Item::sharpened_pole, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::sharp_spear, 1, 60)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillMeleeWeapons, 40, CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::spear, 1, 0, Content::Item::flint, 1, 0});
    CraftList.insertLast(craft);

    craft =
        MainCraft(id++, Content::Item::sharpened_pole, 1, 20)
            .AddNeedResources(array<int> = {Content::Item::firewood, 1, 0})
            .AddNeedTools(
                array<int> = {Content::Item::knife, 1, 1, Content::Item::axe, 1, 1, Content::Item::combat_knife, 1, 1, Content::Item::throwing_knife, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::crowbar, 1, 50)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::tube, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::sledgehammer, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::wrench, 1, 90)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::knife, 3, 75)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 20})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0, Content::Item::rags, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::club, 1, 60)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 40, CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::sharpened_pole, 1, 0, Content::Item::pump_parts, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::rock, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::shiv, 1, 50)
                .AddCheckOnView(array<int> = {CritterProperty::SkillOutdoorsman, 20})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0, Content::Item::firewood, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::knife, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::throwing_knife, 1, 70)
                .AddCheckOnView(array<int> = {CritterProperty::SkillThrowing, 40})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillThrowing, 50, CritterProperty::SkillRepair, 30})
                .AddNeedResources(array<int> = {Content::Item::knife, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::multi_tool, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::shovel, 1, 50)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0, Content::Item::sharpened_pole, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::axe, 1, 70)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 30})
                .AddNeedResources(array<int> = {Content::Item::metal_trash, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::sandbag_empty, 1, 60)
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillOutdoorsman, 20})
                .AddNeedResources(array<int> = {Content::Item::rags, 4, 0, Content::Item::pocket_lint, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::shiv, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::sandbag_1, 1, 10)
                .AddNeedResources(array<int> = {Content::Item::sandbag_empty, 1, 0})
                .AddNeedTools(array<int> = {Content::Item::shovel, 1, 0});
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::elephant_gun, 1, 500)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 40, CritterProperty::SkillRepair, 50})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 80, CritterProperty::SkillScience, 60, CritterProperty::SkillRepair, 100})
                .AddNeedResources(array<int> = {Content::Item::tube,
                                                1,
                                                0,
                                                Content::Item::plank,
                                                1,
                                                0,
                                                Content::Item::firewood,
                                                1,
                                                0,
                                                Content::Item::metal_trash,
                                                4,
                                                0,
                                                Content::Item::pump_parts,
                                                2,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::welding, 1, 0, Content::Item::guns_and_bullets, 1, 0})
                .SetScript(fix_NitroExpress);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::multi_barrel_gun, 1, 350)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 60, CritterProperty::SkillRepair, 60})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 80, CritterProperty::SkillScience, 100, CritterProperty::SkillRepair, 80})
                .AddNeedResources(array<int> = {Content::Item::tube,
                                                6,
                                                0,
                                                Content::Item::firewood,
                                                2,
                                                0,
                                                Content::Item::metal_trash,
                                                4,
                                                0,
                                                Content::Item::pump_parts,
                                                2,
                                                0,
                                                Content::Item::small_energy_cell,
                                                40,
                                                0,
                                                Content::Item::v15_computer_part,
                                                7,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::welding, 1, 0, Content::Item::guns_and_bullets, 1, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);

    craft = MainCraft(id++, Content::Item::metal_storm, 1, 500)
                .AddCheckOnView(array<int> = {CritterProperty::SkillScience, 80, CritterProperty::SkillRepair, 80})
                .AddCheckOnCraft(array<int> = {CritterProperty::SkillSmallGuns, 80, CritterProperty::SkillScience, 120, CritterProperty::SkillRepair, 100})
                .AddNeedResources(array<int> = {Content::Item::hk_g11e,
                                                7,
                                                0,
                                                Content::Item::metal_trash,
                                                8,
                                                0,
                                                Content::Item::pump_parts,
                                                5,
                                                0,
                                                Content::Item::micro_fusion_cell,
                                                50,
                                                0,
                                                Content::Item::v15_computer_part,
                                                15,
                                                0,
                                                Content::Item::oil_can,
                                                2,
                                                0})
                .AddNeedTools(array<int> = {Content::Item::super_tool_kit, 1, 0, Content::Item::welding, 2, 0, Content::Item::guns_and_bullets, 1, 0})
                .SetScript(fix_AnyStuff);
    CraftList.insertLast(craft);
}

int fix_PowerArmor(Critter player, int state, MainCraft craft)
{
    if (player.FixboyPowerArmor == 0)
        return FIX_FAIL;
    if (state == Tla::FixboyCraft)
        player.FixboyPowerArmor = 0;
    return FIX_SUCCESS;
}

int fix_VenomousRat(Critter player, int state, MainCraft craft)
{
    if (player.ModLourenceVenomedratRecipe == 0)
        return FIX_FAIL;
    return FIX_SUCCESS;
}

int fix_SuperToxine(Critter player, int state, MainCraft craft)
{
    if (player.ModLourenceToxinRecipe == 0)
        return FIX_FAIL;
    return FIX_SUCCESS;
}

int fix_TntRat(Critter player, int state, MainCraft craft)
{
    if (player.ModLourenceTNTRatRecipe == 0)
        return FIX_FAIL;
    return FIX_SUCCESS;
}

int fix_EmpRocket(Critter player, int state, MainCraft craft)
{
    if (player.NavEmpRocketRecipe == 0)
        return FIX_FAIL;
    return FIX_SUCCESS;
}

// Усложненный крафт
// - для отображения в пипбое требуется знание рецепта
// - для производства необходимо находиться рядом со специальным станком
// - у станка может задаваться таймаут на последующее использование. Таймаут сохраняется. Создается также тайм эвент на очистку.
// - если на карте несколько одинаковых станков и у них указан таймаут - у него будет общее значение.

/* У прессов для производства аммуниции и токарных станков есть по несколько изображений, но используется один прототип,
   чтобы не добавлять лишние проверки в скрипт - просто переключайтесь между изображениями через параметр PicMap
   в маппере, название кадра будет то же самое, меняется только цифра в конце.
   Сейчас доступно по два варианта для станков:
   art\scenery\manufact_ammo1.fofrm
   art\scenery\manufact_ammo2.fofrm
   art\scenery\manufact_lathe1.fofrm
   art\scenery\manufact_lathe2.fofrm
 */

///@ Property Map PrivateServer uint=>uint FixBoyWorkBenchTimeout                          // Таймаут на крафт для станка. Если равен = 0 значит истек.
///@ Property Map PrivateServer uint=>uint FixBoyWorkBenchCharges                          // Число зарядов станка если =0 запускается таймаут на обновление.

#define DEFAULT_RADIUS          (5) // Радиус поиска станка в гексах, по умолчанию.
#define DEFAULT_CHARGES         (2) // Число зарядов в станке по умолчанию.
#define DEFAULT_TIMEOUT_MINUTES #(cr)((60 * 24 * 7 * 1) +(24 * 60 *(10 - cr.Luck))) // Таймаут станка по умолчанию. Одна игровая неделя + влияние удачи.
#define SCENERY_HUB_WORKBENCH   (4277) // Код прототипа сценери для крафта плазменных гранат (Хабологи)
#define SCENERY_SHOE_WORKBENCH  (4278) // Код прототипа сценери для крафта Ши
#define SCENERY_AMMO_PRESS      (4279) // Пресс для производства аммуниции (2 вида, различаются изображением терминала)
#define SCENERY_LATHE           (4281) // Токарный станок (второй вариант - станок на не-ржавом столе)
#define SCENERY_WORKBENCH       (4282) // Верстак по-умолчанию.
#define SCENERY_STOVE           (3200) // Печь для плавки хитина
#define STR_NO_WORKBENCH        (300) // Для производства требуется находиться рядом со cпециальным станком или верстаком.
#define STR_TIMEOUT             (301) // Станок или верстак в неработоспособном состоянии. Производство невозможно. Попробуйте позже.
#define STR_NO_CHARGES          (302) // Станок или верстак в неработоспособном состоянии. Произведен максимум возможных предметов. Производство невозможно.

/*                РЕЦЕПТЫ                 */

int fix_AnyStuff(Critter player, int state, MainCraft craft)
{
    return fix_Something(player, SCENERY_WORKBENCH, DEFAULT_RADIUS, CritterProperty::FixboyDefault, state, 120, 100);
}

int fix_SuperSledge(Critter player, int state, MainCraft craft) // Рецепт на изготовление суперкувалды. Ши.
{
    return fix_Something(player,
                         SCENERY_SHOE_WORKBENCH,
                         DEFAULT_RADIUS,
                         CritterProperty::SFRecipeSsupersledge,
                         state,
                         DEFAULT_TIMEOUT_MINUTES(player),
                         DEFAULT_CHARGES);
}

int fix_ChitinArmor(Critter player, int state, MainCraft craft) // Хитиновая броня
{
    if (state == Tla::FixboyList) {
        if (fix_ByRecipe(player, Content::Item::chitin_armor_recipe, state, craft) == FIX_SUCCESS)
            return FIX_SUCCESS;
        return fix_Something(player, SCENERY_STOVE, 10, CritterProperty::SFChitinArmorRecipeKnown, state, GAME_DAY_MINUTES(1), 1);
    }
    if (state == Tla::FixboyButton) {
        return fix_Something(player, SCENERY_STOVE, 10, CritterProperty::SFChitinArmorRecipeKnown, state, GAME_DAY_MINUTES(1), 1);
    }
    if (state == Tla::FixboyCraft) {
        fix_ByRecipe(player, Content::Item::chitin_armor_recipe, state, craft);
        fix_Something(player, SCENERY_STOVE, 10, CritterProperty::SFChitinArmorRecipeKnown, state, GAME_DAY_MINUTES(1), 1);
        if (_CritCountItem(player, Content::Item::metal_trash) > 3) {
            int chance = 0, luck = player.Luck;
            if (luck > 9)
                chance = 15;
            if (luck > 7 && luck < 10)
                chance = 10;
            if (luck > 5 && luck < 8)
                chance = 5;

            if (fix_AdvancedCraft(player, Content::Item::chitin_armor, Content::Item::chitin_armor_mk_ii, chance, true, 2, state))
                _CritDeleteItem(player, Content::Item::metal_trash, 2);
        }
    }
    return FIX_SUCCESS;
}

int fix_PlasmaGrenade(Critter player, int state, MainCraft craft) // Рецепт на изготовление плазменных гранат. Хабологи.
{
    return fix_Something(player, SCENERY_HUB_WORKBENCH, DEFAULT_RADIUS, CritterProperty::SFRecipePlasmagrenades, state, DEFAULT_TIMEOUT_MINUTES(player), 50);
}

int fix_NitroExpress(Critter player, int state, MainCraft craft) // Рецепт на изготовление винтовки .700 калибра, включен по-умолчанию.
{
    return fix_Something(player, SCENERY_LATHE, DEFAULT_RADIUS, CritterProperty::Fixboy700NitroExpress, state, DEFAULT_TIMEOUT_MINUTES(player), 2);
}

int fix_NitroExpressRounds(Critter player, int state, MainCraft craft)
{
    return fix_Something(player, SCENERY_AMMO_PRESS, DEFAULT_RADIUS, CritterProperty::FixboyAmmoPressOperator, state, 6000, 10);
}

int fix_AnyRounds(Critter player, int state, MainCraft craft)
{
    return fix_Something(player, SCENERY_AMMO_PRESS, DEFAULT_RADIUS, CritterProperty::FixboyAmmoPressOperator, state, 120, 10);
}

/*                РЕЦЕПТЫ                */

// player - крафтящий игрок
// pidWorkbench - код прототипа элемента сценери, служащего станком
// radius - радиус поиска станка
// varNum - номер проверяемой переменной
// state - Fix boy function call state
// timeOut - время в игровых минутах, сколько станок будет простаивать
// charges - максимальное число предметов, которые может изготовить игрок за один таймаут
uint fix_Something(Critter player, int pidWorkbench, int radius, int varNum, int state, int timeOut, int charges)
{
    if (state == Tla::FixboyList) {
        if (!CheckRecipeKnown(player, varNum))
            return FIX_FAIL;
    }
    if (state == Tla::FixboyButton) {
        if (!CheckWorkbenchNearPlayer(player, pidWorkbench, state)) {
            player.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_NO_WORKBENCH);
            return FIX_FAIL;
        }
        if (!CheckWorkbenchTimeOut(player, pidWorkbench, charges)) {
            player.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_TIMEOUT);
            return FIX_FAIL;
        }
        if (!CheckWorkbenchCharges(player, pidWorkbench)) {
            player.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_NO_CHARGES);
            return FIX_FAIL;
        }
    }
    if (state == Tla::FixboyCraft) {
        SetWorkbenchCharges(player, pidWorkbench, charges);
        if (!CheckWorkbenchCharges(player, pidWorkbench))
            SetWorkbenchTimeout(player, pidWorkbench, timeOut);
    }
    return FIX_SUCCESS;
}

// Проверка, истек ли таймаут на производство для заданного типа станка на данной карте
// true  - таймаут прошел, или не назначался
// false - таймаут установлен, и еще не истек
bool CheckWorkbenchTimeOut(Critter player, int pidWorkbench, int maxCharges)
{
    Map map = player.GetMap();
    if (!valid(map))
        return false;

    uint time = map.FixBoyWorkBenchTimeout.get(pidWorkbench, 0);
    if (time == 0)
        return true;

    if (GetFullSecond() < time)
        return false;
    else
        SetWorkbenchCharges(player, pidWorkbench, maxCharges);
    return true;
}

// Проверяет, есть ли заряды в станке
bool CheckWorkbenchCharges(Critter player, int pidWorkbench)
{
    Map map = player.GetMap();
    if (!valid(map))
        return false;

    return map.FixBoyWorkBenchCharges.get(pidWorkbench, 0) > 0;
}

// Проверка, что рядом с игроком находится станок для производства того или иного итема
// pidWorkbench - код прототипа элемента Scenery, который играет роль станка
// radius - максимальное расстояние до станка, в котором должен находиться игрок
bool CheckWorkbenchNearPlayer(Critter player, int pidWorkbench, int radius)
{
    Map map = player.GetMap();
    if (!valid(map))
        return false;

    return map.GetStaticItems(player.HexX, player.HexY, radius, pidWorkbench).length() > 0;
}

// Проверка, что игроку известен рецепт
// varNum - номер переменной, в которой хранится признак известности рецепта
bool CheckRecipeKnown(Critter player, int varNum)
{
    return player.GetAsInt(CritterProperty(varNum)) == 1;
}

// Установка таймаута на работу станка
// timeout = время, в течении которого станок недоступен, в игровых минутах
void SetWorkbenchTimeout(Critter player, int pidWorkbench, int timeout)
{
    if (timeout == 0)
        return;

    Map map = player.GetMap();
    if (!valid(map))
        return;

    auto fixBoyWorkBenchTimeout = map.FixBoyWorkBenchTimeout.clone();
    fixBoyWorkBenchTimeout[pidWorkbench] = GetFullSecond() + timeout * 60;
    map.FixBoyWorkBenchTimeout = fixBoyWorkBenchTimeout;
}

// Изменение числа зарядов станка
// chargesMax - максимальное число зарядов в станке
void SetWorkbenchCharges(Critter player, int pidWorkbench, int chargesMax)
{
    if (chargesMax == 0)
        return;

    Map map = player.GetMap();
    if (!valid(map))
        return;

    auto fixBoyWorkBenchCharges = map.FixBoyWorkBenchCharges.clone();
    uint charges = fixBoyWorkBenchCharges.get(pidWorkbench, 0);
    charges = (charges > 0 ? charges - 1 : chargesMax);
    fixBoyWorkBenchCharges[pidWorkbench] = charges;
    map.FixBoyWorkBenchCharges = fixBoyWorkBenchCharges;
}

/* Крафт с бумажным рецептом, рецепт исчезает после крафта */
uint fix_ByRecipe(Critter player, int recipePid, int state, MainCraft craft)
{
    if (state == Tla::FixboyList) {
        if (_CritCountItem(player, recipePid) < 1) // Нет рецепта в инвентаре
            return FIX_FAIL;
    }
    if (state == Tla::FixboyCraft) {
        _CritDeleteItem(player, recipePid, 1); // Удаляем рецепт после крафта
    }
    return FIX_SUCCESS;
}

/* В результате крафта может появиться более продвинутый экземпляр предмета */
/*
   basePid = код предмета, который производит игрок
   advancedPid = код предмета, который получится при проке
   signed = признак, подписывать предмет или нет.
   info - инфо предмета, на которое нужно переключиться
   Подписываются только предметы ARMOR, WEAPON
 */
bool fix_AdvancedCraft(Critter player, int basePid, int advancedPid, int chance, bool signed, int info, int state)
{
    if (state == Tla::FixboyCraft && Random(0, 100) < chance) {
        uint[] values = {player.Id, basePid, advancedPid};
        if (signed) {
            ItemProto proto = GetItemProto(advancedPid);
            if (valid(proto)) {
                uint type = proto.Type;
                if (type == ItemType::Weapon || type == ItemType::Armor) {
                    values.insertLast(info);
                }
            }
        }
        DeferredCall(0, ProcessAdvancedCraft, values);
        return true;
    }
    return false;
}

// Временное событие, убираем скрафченый базовый предмет, заменяем усовершенствованным
void ProcessAdvancedCraft(uint[] values)
{
    Critter cr = GetCritter(values[0]);
    if (valid(cr)) {
        Item baseItem = _CritGetItem(cr, values[1]);
        if (valid(baseItem)) {
            _SubItem(baseItem, 1);
            Item advItem = _CritAddItem(cr, values[2], 1);
            if (valid(advItem) and values.length() > 3) {
                advItem.Info = values[3];
                advItem.Lexems = "$craftername" + Obsolete::GetPlayerName(cr.Id);
            }
        }
    }
}

void Rpc_CraftItem(Critter cr, int state, int craftId, int p2)
{
    int[] data = {};
    int strNum = 0;
    if (state == Tla::FixboyList && craftId == 0) {
        for (uint i = 0; i < CraftList.length(); i++) {
            MainCraft craft = CraftList[i];
            if (craft.CheckOnView(cr)) {
                data.insertLast(craft.Id);
                data.insertLast(craft.CheckOnCraft(cr) ? 1 : 0);
                int[] outItems = craft.OutItems;
                data.insertLast(outItems.length());
                for (uint j = 0; j < outItems.length(); j++)
                    data.insertLast(outItems[j]);
            }
        }
    }
    else if (state == Tla::FixboyList && craftId != 0) {
        MainCraft craft = GetCraft(craftId);

        int[] needResources = craft.NeedResources;
        data.insertLast(needResources.length());
        for (uint i = 0; i < needResources.length(); i++)
            data.insertLast(needResources[i]);

        int[] needTools = craft.NeedTools;
        data.insertLast(needTools.length());
        for (uint i = 0; i < needTools.length(); i++)
            data.insertLast(needTools[i]);

        int[] needParams = craft.OnCraft;
        data.insertLast(needParams.length());
        for (uint i = 0; i < needParams.length(); i++)
            data.insertLast(needParams[i]);
    }
    else if (state == Tla::FixboyButton) {
        MainCraft craft = GetCraft(craftId);
        strNum = craft.CraftedItem(cr) ? MsgStr::StrFixSuccess : MsgStr::StrFixFail;
    }
    cr.ClientCall.ShowFixBoy(craftId, strNum, 0, data);
}
#endif

#ifdef __CLIENT
void ShowFixBoy(int craftId, int strNum, int p2, int[] data)
{
    Log("data len:@" + data.length());
    HideScreen(CLIENT_SCREEN_FIX_BOY);
    ShowScreen(CLIENT_SCREEN_FIX_BOY, UtilsForArray::DictionaryToDict(dictionary = {{"CraftId", craftId}, {"Data", data}, {"StrNum", strNum}}));
}
#endif
