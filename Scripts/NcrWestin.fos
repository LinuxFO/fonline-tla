// FOS Server Sort 2
// Скрипты советника Вейстина
// rifleman17

// #include "Tla"

///@ Property Critter PrivateServer hash NcrWestinMapPidTo
///@ Property Critter PrivateServer uint NcrWestinHexNumTo
///@ Property Critter PrivateServer uint NcrWestinEveryEveningInvokeId
///@ Property Critter PrivateServer uint NcrWestinEveryMorningInvokeId

///@ Property Global PrivateServer uint8 NcrWestinPositionGlobal

// //import uint GetNearFullSecond0( uint16 year, uint16 month, uint16 day, uint16 hour, uint16 minute, uint16 second ) from "Time";

#define PLANE_MOVE_TO_EXIT_GRID          ( 17 )                      // план: Вейстин идет к выходу из локации для последующего телепорта.
#define MAP_PID_NCR_COUNCIL              ( 43 )                      // прототип карты НКР - здание правительства
#define ENT_HEX_ID_COUNCIL_HOME          ( 17 )                      // номер EN гекса - исходная позиция в здании правительства
#define ENT_HEX_ID_COUNSIL_TRANSIT       ( 18 )                      // номер EN гекса - позиция перед выходом из локации  правительства
#define MAP_PID_RANCH                    ( 44 )                      // прототип карты НКР - Ранчо вейстина
#define ENT_HEX_ID_RANCH_HOME            ( 17 )                      // номер EN гекса - исходная позиция на Ранчо
#define ENT_HEX_ID_RANCH_TRANSIT         ( 18 )                      // номер EN гекса - позиция перед выходом из Ранчо

#define NPC_ROLE_WESTIN                  ( 19 )                      // роль = вейстин

/*
   {2930}{}{Тяжелый день...}
   {2931}{}{Ну вот, опять нужно куда-то идти...}
 */

#define STR_NUM_GO_HOME                  ( 2930 )
#define STR_NUM_GO_WORK                  ( 2931 )

#define WESTIN_PLANE_MOVE_PRIORITY       ( 49 )
#define WESTIN_PLANE_TRANSIT_PRIORITY    ( 48 )

#define WESTIN_POS_VAR_COUNCIL           ( 0 )
#define WESTIN_POS_VAR_RANCH             ( 1 )

void _WestinInit( Critter westin, bool firstTime )
{
    // ~settime 99 2246 11 3 20 50
    if( firstTime )
    {
        // каждые игровые сутки Вейстин уходит с работы до своего Ранчо в 21:00
        westin.NcrWestinEveryEveningInvokeId = SavedDeferredCall( GAME_SECOND_TO_TICK( Time::GetNearFullSecond( 0, 0, 0, 21, 0, 0 ) - __FullSecond ), EveryEvening, westin.Id );

        // каждые игровые сутки Вейстин пытается дойти до здания правительства в 07:00
        westin.NcrWestinEveryMorningInvokeId = SavedDeferredCall( GAME_SECOND_TO_TICK( Time::GetNearFullSecond( 0, 0, 0, 7, 0, 0 ) - __FullSecond ), EveryMorning, westin.Id );
    }
    westin.NpcRole = NPC_ROLE_WESTIN;
    __EventCritterFinish.SubscribeToCritter( westin, _WestinFinish );
}

// при удалении нпц удаляются обработчики временных событий, чтобы не было ошибок о null ptr
void _WestinFinish( Critter westin )
{
    CancelDeferredCall( westin.NcrWestinEveryEveningInvokeId );
    CancelDeferredCall( westin.NcrWestinEveryMorningInvokeId );
    // если Вейстин был на карте Ранчо, его нужно телепортировать в консульство
}

// вечернее событие
void EveryEvening( uint value )
{
    // Log("вечерняя прогулка вейстина");

    Critter westin = GetCritter( value );
    uint    time = GAME_SECOND_TO_TICK( Time::GetNearFullSecond( 0, 0, 0, 21, 0, 0 ) - __FullSecond );

    if( !valid( westin ) )
    {
        westin.NcrWestinEveryEveningInvokeId = SavedDeferredCall( time, EveryEvening, value );
        return;
    }
    if( !westin.IsLife() )
    {
        westin.NcrWestinEveryEveningInvokeId = SavedDeferredCall( time, EveryEvening, value );
        return;
    }

    westin.SayMsg( SAY_NORM_ON_HEAD, TEXTMSG_TEXT, STR_NUM_GO_HOME );
    // куда телепортироваться
    westin.NcrWestinMapPidTo = MAP_PID_RANCH;
    westin.NcrWestinHexNumTo = ENT_HEX_ID_RANCH_HOME;
    // координаты гекса, до которого должен дойти Вейстин перед телепортом

    if( westin.GetMap().ProtoId == MAP_PID_RANCH )
    {
        westin.NcrWestinEveryEveningInvokeId = SavedDeferredCall( time, EveryEvening, value );
        return;
    }

    uint16 hx = westin.HexX;
    uint16 hy = westin.HexY;
    Entire::GetNearEntire( westin.GetMap(), ENT_HEX_ID_COUNSIL_TRANSIT, hx, hy );
    NpcPlanes::AddWalkPlane( westin, WESTIN_PLANE_MOVE_PRIORITY, PLANE_MOVE_TO_EXIT_GRID, 0, hx, hy, Random( 0, 5 ), false, Random( 0, 1 ) );
    NpcPlanes::AddMiscPlane( westin, WESTIN_PLANE_TRANSIT_PRIORITY, 0, NcrWestin::plane_Transit );

    westin.NcrWestinEveryEveningInvokeId = SavedDeferredCall( time, EveryEvening, value );
}

// утреннее событие
void EveryMorning( uint value )
{
    // Log("утренняя прогулка вейстина");

    Critter westin = GetCritter( value );
    uint    time = GAME_SECOND_TO_TICK( Time::GetNearFullSecond( 0, 0, 0, 7, 0, 0 ) - __FullSecond );
    if( !valid( westin ) )
    {
        westin.NcrWestinEveryMorningInvokeId = SavedDeferredCall( time, EveryMorning, westin.Id );
        return;
    }
    if( !westin.IsLife() )
    {
        westin.NcrWestinEveryMorningInvokeId = SavedDeferredCall( time, EveryMorning, westin.Id );
        return;
    }

    westin.SayMsg( SAY_NORM_ON_HEAD, TEXTMSG_TEXT, STR_NUM_GO_WORK );

    westin.NcrWestinMapPidTo = MAP_PID_NCR_COUNCIL;
    westin.NcrWestinHexNumTo = ENT_HEX_ID_COUNCIL_HOME;

    if( westin.GetMap().ProtoId == MAP_PID_NCR_COUNCIL )
    {
        westin.NcrWestinEveryMorningInvokeId = SavedDeferredCall( time, EveryMorning, westin.Id );
        return;
    }

    // координаты гекса, до которого должен дойти Вейстин перед телепортом
    uint16 hx = westin.HexX;
    uint16 hy = westin.HexY;
    Entire::GetNearEntire( westin.GetMap(), ENT_HEX_ID_RANCH_TRANSIT, hx, hy );
    NpcPlanes::AddWalkPlane( westin, WESTIN_PLANE_MOVE_PRIORITY, PLANE_MOVE_TO_EXIT_GRID, 0, hx, hy, Random( 0, 5 ), false, Random( 0, 1 ) );
    NpcPlanes::AddMiscPlane( westin, WESTIN_PLANE_TRANSIT_PRIORITY, 0, NcrWestin::plane_Transit );

    westin.NcrWestinEveryMorningInvokeId = SavedDeferredCall( time, EveryMorning, westin.Id );
}

// телепортация на карту с прототипом, сохраненным в NcrWestinMapPidTo
void plane_Transit( Critter westin )
{
    // Log(" try transit");
    if( westin.NcrWestinMapPidTo == 0 )
    {
        return;
    }
    Map map = westin.GetMap();
    if( !valid( map ) )
    {
        return;
    }
    if( map.ProtoId == westin.NcrWestinMapPidTo )
    {
        return;
    }

    Map mapTo = GetMapByPid( westin.NcrWestinMapPidTo, 0 );
    if( !valid( mapTo ) )
    {
        return;
    }
    // проверяем, что на карте назначения нет уже такого нпц
    // если есть, удаляем этого.
    uint westins = mapTo.GetNpcCount( NPC_ROLE_WESTIN, FIND_ALL );
    if( westins > 0 )
    {
        // Critter[] westins = {};
        Log( "Multiple westins founded. Kill'em all" );
        for( uint i = 0; i < westins; i++ )
        {
            Critter realWestin = mapTo.GetNpc( NPC_ROLE_WESTIN, FIND_ALL, i );
            if( !valid( realWestin ) )
            {
                continue;
            }
            if( realWestin.DialogId == westin.DialogId )
            {
                Log( "Fake Westin successfully terminated!" );
                DeleteNpc( westin );
                return;
            }
        }
    }

    if( Obsolete::CritterTransitToMapEntire( westin, mapTo.Id, HASHI( westin.NcrWestinHexNumTo ) ) )
    {
        westin.HomeMapId = mapTo.Id;
        westin.HomeHexX = westin.HexX;
        westin.HomeHexY = westin.HexY;
        westin.HomeDir = westin.Dir;
        Globals.NcrWestinPositionGlobal = westin.NcrWestinMapPidTo == MAP_PID_NCR_COUNCIL ? WESTIN_POS_VAR_COUNCIL : WESTIN_POS_VAR_RANCH;
    }
}
