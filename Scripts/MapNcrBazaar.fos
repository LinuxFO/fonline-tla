// FOS Server Sort 2

//#include "Tla"

////import uint GetNearFullSecond0( uint16 year, uint16 month, uint16 day, uint16 hour, uint16 minute, uint16 second ) from "Time";
////import void DisableForceField0( uint[] values ) from "EnergyBarier";
////import void EnableForceField0( uint[] values ) from "EnergyBarier";

void _MapInit( Map bazaar, bool firstTime )
{
    uint16 year = 0, month = 0, day = 0, dayOfWeek = 0, hour = 0, minute = 0, second = 0;
    uint[] values = {};
    values.insertLast( 1 );
    Location loc = bazaar.GetLocation();
    if( !valid( loc ) )
    {
        Log( "Error: location not valid" );
        return;
    }
    values.insertLast( loc.Id );
    DeferredCall( GAME_SECOND_TO_TICK( Time::GetNearFullSecond( 0, 0, 0, 6, 0, 0 ) - __FullSecond ), RepeatDisableForceField, values );
    DeferredCall( GAME_SECOND_TO_TICK( Time::GetNearFullSecond( 0, 0, 0, 20, 0, 0 ) - __FullSecond ), RepeatEnableForceField, values );
    GetGameTime( __FullSecond, year, month, day, dayOfWeek, hour, minute, second );
    if( hour >= 20 || hour < 5 )
        DeferredCall( 0, EnergyBarier::EnableForceField, values );
}

void RepeatDisableForceField( uint[] values )
{
    DeferredCall( 0, EnergyBarier::DisableForceField, values );
    DeferredCall( GAME_SECOND_TO_TICK( 24 * 60 * 60 ), RepeatDisableForceField, values );
}

void RepeatEnableForceField( uint[] values )
{
    DeferredCall( 0, EnergyBarier::EnableForceField, values );
    DeferredCall( GAME_SECOND_TO_TICK( 24 * 60 * 60 ), RepeatEnableForceField, values );
}
