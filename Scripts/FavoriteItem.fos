// FOS Server

void ModuleInit()
{
    GameInstance.OnCritterIdle.Subscribe(OnCritterIdle);
}

void OnCritterIdle(Critter cr)
{
    if (!cr.IsNpc() || cr.IsNoFavoriteItem)
        return;

    hstring[] pids = cr.FavoriteItemPid.clone();
    for (uint i = 1; i < pids.length(); i++) {
        AbstractItem slotItem = Obsolete::GetConstItemBySlot(cr, i);
        hstring slotItemPid = (slotItem !is null ? slotItem.ProtoId : 0);
        if (pids[i] != slotItemPid) {
            if (slotItem !is null && slotItem.Id > 0) {
                cr.ChangeItemSlot(slotItem.Id, SLOT_INV);
                break;
            }
            else if (pids[i] != 0) {
                Item item = Obsolete::GetSlotItem(cr, pids[i], SLOT_INV);
                if (item !is null && item.Id > 0) {
                    cr.ChangeItemSlot(item.Id, i);
                    break;
                }
            }
        }
    }
}

hstring GetFavoriteItemPid(Critter cr, uint slot)
{
    hstring[] pids = cr.FavoriteItemPid.clone();
    if (slot > 0 && slot < pids.length())
        return pids[slot];
    return 0;
}

void SetFavoriteItemPid(Critter cr, int slot, hstring pid)
{
    if (slot > 0) {
        hstring[] pids = cr.FavoriteItemPid.clone();
        int len = pids.length();
        if (len <= slot) {
            pids.resize(slot + 1);
        }
        pids[slot] = pid;
        cr.FavoriteItemPid = pids;
    }
}
