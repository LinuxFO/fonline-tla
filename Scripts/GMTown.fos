// FOS Server Client
// TODO: При движении в группе неизвестно, что будет, если не лидер группы посмотрит город.
///@ RemoteCall Client ShowTownView(int locId, int mapIndex, int)
///@ RemoteCall Client ShowGMTown(int locId, int locPid, int, int[]  indexMaps)

///@ RemoteCall Server Rpc_TransitToMap(int locId, int mapIndex, int)
///@ RemoteCall Server Rpc_ShowTownView(int locId, int mapIndex, int)
///@ RemoteCall Server Rpc_ShowGMTown(int)

#ifdef __SERVER

void Rpc_ShowGMTown( Critter  cr, int )
{
    Location[] locs = {};
    locs = GetVisibleLocations( cr.WorldX, cr.WorldY, 0, cr );
    if( locs.length() == 0 )
        return;

    Location loc = locs[ 0 ];
    hstring[] entraceMaps = loc.MapEntrances.clone();
    hstring[] mapProtos = loc.MapProtos.clone();
    int[] indexMaps = {};
    for( uint i = 0; i < entraceMaps.length(); i += 2 )
        indexMaps.insertLast( mapProtos.find( entraceMaps[ i ] ) );

    cr.Rpc.ShowGMTown( loc.Id, loc.ProtoId, 0, indexMaps );
}

void Rpc_ShowTownView( Critter  cr, int locId, int mapIndex, int )
{
    Location loc = GetLocation( locId );
    Map      map = loc.GetMapByIndex( mapIndex );
    hstring[] entraceMaps = loc.MapEntrances.clone();
    int      entNum = entraceMaps.find( map.ProtoId );
    if( entNum == -1 )
        return;

    entNum = entraceMaps[ entNum + 1 ];
    uint16 hx = 0, hy = 0;
    // cr.Rpc.ShowTownView( locId, mapIndex, 0 );
    // Entire::MapGetEntireCoords( map,  entNum, 0, hx, hy  );
    // cr.ViewMap( map, 40, map.Width / 2, map.Height / 2, 3 );
}

void Rpc_TransitToMap( Critter  cr, int locId, int mapIndex, int )
{
    Location loc = GetLocation( locId );
    Map      map = loc.GetMapByIndex( mapIndex );
    hstring[] entraceMaps = loc.MapEntrances.clone();
    int      entNum = entraceMaps.find( map.ProtoId );
    if( entNum == -1 )
        return;
    entNum = entraceMaps[ entNum + 1 ];
    uint16 hx = 0, hy = 0;
    Entire::MapGetEntireCoords( map,  entNum, 0, hx, hy  );
    Obsolete::CritterTransitToMapCoords( cr, map.Id, map.Width / 2, map.Height / 2, Random( 0, 5 ) );
}
#endif

#ifdef __CLIENT
void ShowGMTown( int locId, int locPid, int, int[]  indexMaps )
{
    dictionary params = {   { "LocationId", locId },
                            { "LocationPid", locPid },
                            { "IndexMaps", indexMaps } };
    ShowScreen( CLIENT_SCREEN_GM_TOWN, params );
}

int CurrentLocationId;
int CurrentEntrance;

void ShowTownView( int locId, int entrance, int )
{
    HideScreen();

    CurrentLocationId = locId;
    CurrentEntrance = entrance;

    dictionary params = {   { "LocationId", locId },
                            { "LocationEntrance", entrance } };
    // r17: движок сам показывает этот скрин при просмотре карты, но с пустым контекстом (без ид локации и номера энтайра)
    // Скрин может быть показан позже скриптового вызова
    // HideScreen( CLIENT_SCREEN_TOWN_VIEW );
    // ShowScreen( CLIENT_SCREEN_TOWN_VIEW, params );
}
#endif
