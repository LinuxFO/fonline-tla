// FOS Common Sort -1

hash MakePropHashForMsg( CritterProperty prop )
{
    string str = GetHashStr( hash( prop ) );
    if( str.endsWith( "Base" ) )
        return GetStrHash( str.substr( 0, str.length() - 4 ) );
    return hash( prop );
}

hash Get( string strName )
{
    return GetStrHash( strName );
}

#define MSG_GAME                             # (str)    GetMsgStr( TEXTMSG_GAME, str )
#define MSG_TEXT                             # (str)    GetMsgStr( TEXTMSG_TEXT, str )
#define IS_MSG_GAME                          # (str)    IsMsgStr( TEXTMSG_GAME, str )
#define MSG_QUEST                            # (str)    GetMsgStr( TEXTMSG_QUEST, str )
#define MSG_HOLO                             # (str)    GetMsgStr( TEXTMSG_HOLO, str )
#define MSG_LOCATION                         # (str)    GetMsgStr( TEXTMSG_LOCATIONS, str )
#define IS_MSG_LOCATION                      # (str)    IsMsgStr( TEXTMSG_LOCATIONS, str )
#define MSG_HOLO                             # (str)    GetMsgStr( TEXTMSG_HOLO, str )
#define MSG_ITEM                             # (str)    GetMsgStr( TEXTMSG_ITEM, str )
// ***************************************************************************************
// ***  SYMBOLS  *************************************************************************
// ***************************************************************************************

#define TEXT_SYMBOL_DOT                      ( 0x2022 ) // UTF-8
#define TEXT_SYMBOL_UP                       ( 24 )
#define TEXT_SYMBOL_DOWN                     ( 25 )

// ***************************************************************************************
// ***  FOTEXT.MSG  **********************************************************************
// ***************************************************************************************

const hash StrDiceThrow = 500;   // lex result
const hash StrMagicBallYes = 510;
const hash StrMagicBallNo = 511;
const hash StrCosmeticUse = 520;
const hash StrCigarettesSmoke = 530;

// ***************************************************************************************
// ***  FOGAME.MSG  **********************************************************************
// ***************************************************************************************

const hash StrVersionInfo = 1;

// Months, days
#define STR_MONTH( m )            ( 20 + ( m ) )
#define STR_DAY_OF_WEEK( dow )    ( 32 + ( dow ) )

// Misc
#define STR_DOT                              ( 50 )
#define STR_COMMA                            ( 52 )
#define STR_SLASH                            ( 53 )
const hash StrAnd = 54;
#define STR_OR                               ( 55 )

// Music/Video
#define STR_MUSIC_MAIN_THEME                 ( 80 )
#define STR_VIDEO_INTRO_BEGIN                ( 90 )
#define STR_VIDEO_INTRO_END                  ( 99 )

// Chat
#define STR_CRNORM                           ( 100 )
#define STR_CRSHOUT                          ( 102 )
#define STR_CREMOTE                          ( 104 )
#define STR_CRWHISP                          ( 106 )
#define STR_CRSOCIAL                         ( 108 )
#define STR_MBNORM                           ( 120 )
#define STR_MBSHOUT                          ( 122 )
#define STR_MBEMOTE                          ( 124 )
#define STR_MBWHISP                          ( 126 )
#define STR_MBSOCIAL                         ( 128 )
#define STR_MBRADIO                          ( 130 )
#define STR_MBNET                            ( 132 )

// FixBoy
const hash StrFixParams = 150;
const hash StrFixTools = 151;
const hash StrFixItems = 152;
const hash StrFixPieces = 155;
const hash StrFixYouhave = 156;
const hash StrFixSuccess = 160;
const hash StrFixFail = 161;
#define STR_FIX_TIMEOUT                      ( 162 )

// Interface
const hash StrOptionsLanguage = 200;
const hash StrOptionsLanguageRussian = 201;
const hash StrOptionsLanguageEnglish = 202;
const hash StrOptionsResolution = 210;
const hash StrOptionsFullScreen = 211;
const hash StrOptionsAlwaysOnTop = 212;
const hash StrOptionsMusic = 213;
const hash StrOptionsSound = 214;
const hash StrOptionsAlwaysRun = 215;
const hash StrOptionsCombatMode = 216;
const hash StrOptionsCombatModeBoth = 217;
const hash StrOptionsCombatModeRt = 218;
const hash StrOptionsCombatModeTb = 219;
const hash StrOptionsCombatMessages = 220;
const hash StrOptionsCombatMessagesFull = 221;
const hash StrOptionsCombatMessagesShort = 222;
const hash StrOptionsGameServer = 223;
const hash StrOptionsProxyType = 224;
const hash StrOptionsProxyTypeNone = 225;
const hash StrOptionsProxyTypeSocks4 = 226;
const hash StrOptionsProxyTypeSocks5 = 227;
const hash StrOptionsProxyTypeHttp = 228;
const hash StrOptionsProxyServer = 229;
const hash StrOptionsProxyAccess = 230;
const hash StrOptionsBack = 249;
const hash StrOptionsNotAviable = 250;
const hash StrScreenshotSaved = 251;
const hash StrScreenshotNotSaved = 252;
const hash StrLogSaved = 253;
const hash StrLogNotSaved = 254;
const hash StrZoom = 260;
#define STR_GAME_PAUSED                      ( 265 )
const hash StrDialogBarter = 275;
const hash StrDialogSay = 276;
#define STR_DIALOG_LOG                       ( 277 )
const hash StrBarterOffer = 280;
const hash StrBarterTalk = 281;
#define STR_BARTER_END                       ( 282 )
const hash StrMenuoptSavegame = 290;
const hash StrMenuoptLoadgame = 291;
const hash StrMenuoptOptions = 292;
const hash StrMenuoptExit = 293;
const hash StrMenuoptResume = 294;
#define STR_LOGIN_NEWGAME                    ( 300 )
#define STR_LOGIN_LOADGAME                   ( 301 )
const hash StrLoginPlay = 302;
const hash StrLoginRegistration = 303;
const hash StrLoginOptions = 304;
const hash StrLoginCredits = 305;
const hash StrLoginExit = 306;
#define STR_DIALOGBOX_CANCEL                 ( 310 )
#define STR_DIALOGBOX_OK                     ( 311 )
#define STR_DIALOGBOX_FOLLOW                 ( 312 )
#define STR_DIALOGBOX_BARTER_OPEN            ( 313 )
#define STR_DIALOGBOX_BARTER_HIDE            ( 314 )
#define STR_DIALOGBOX_ENCOUNTER_RT           ( 315 )
#define STR_DIALOGBOX_ENCOUNTER_TB           ( 316 )
#define STR_CHA_NAME_NAME                    ( 320 )
#define STR_CHA_NAME_PASS                    ( 321 )
const hash StrChaOk = 325;
const hash StrChaCancel = 326;
const hash StrChaPrint = 327;
const hash StrChaSkills = 328;
const hash StrChaUnspentSp = 329;
const hash StrRegUnspentTags = 335;
const hash StrRegSpecialSum = 336;
const hash StrPerkTake = 340;
const hash StrPerkCancel = 341;
#define STR_GMAP_LOCKED                      ( 350 )
const hash StrGlobalMapCoordInfo = 351;
#define STR_GMAP_CUR_LOC_INFO                ( 352 )
#define STR_GMAP_LOC_INFO                    ( 353 )
const hash StrFindpathAimblock = 360;
const hash StrSplitTitle = 365;
const hash StrSplitAll = 366;
#define STR_TIMER_TITLE                      ( 370 )
const hash StrSayOk = 375;
const hash StrSayCancel = 376;
const hash StrSayTitle = 377;
const hash StrInputBoxWrite = 380;
const hash StrInputBoxBack = 381;
const hash StrTownViewBack = 385;
const hash StrTownViewEnter = 386;
const hash StrTownViewContours = 387;
#define STR_SAVE_LOAD_SAVE                   ( 390 )
#define STR_SAVE_LOAD_LOAD                   ( 391 )
#define STR_SAVE_LOAD_DONE                   ( 392 )
#define STR_SAVE_LOAD_BACK                   ( 393 )
#define STR_SAVE_LOAD_NEW_RECORD             ( 394 )
#define STR_SAVE_LOAD_TYPE_RECORD_NAME       ( 395 )

// Inventory
#define STR_INV_SHORT_SPECIAL                # (num)    uint( MsgStr::MakePropHashForMsg( num ) + GetStrHash( "Inv" ) )
const hash StrInvHp = 407;
const hash StrInvAc = 408;
const hash StrInvNormal = 409;
const hash StrInvLaser = 410;
const hash StrInvFire = 411;
const hash StrInvPlasma = 412;
const hash StrInvExplode = 413;
const hash StrInvNoItem = 414;
const hash StrInvDmg = 415;
const hash StrInvDist = 416;
const hash StrInvAmmo = 417;
const hash StrInvTotalWeight = 420;
const hash StrInvUnarmedDmg = 424;
const hash StrOverweight = 425;
const hash StrOvervolume = 426;
const hash StrInvHasShots = 434;
const hash StrItemWeightGramm = 435;
#define STR_ITEM_WEIGHT_FUNT                 ( 436 )
#define STR_ITEM_COST                        ( 437 )
#define STR_ITEM_TRADER_COST                 ( 438 )
const hash StrOverweightTitle = 440;
const hash StrHidemodeTitle = 441;
const hash StrLevelupTitle = 442;
const hash StrPoisonedTitle = 443;
const hash StrRadiatedTitle = 444;
const hash StrInjuredTitle = 445;
const hash StrAddictedTitle = 446;
const hash StrTimeoutTitle = 447;
#define STR_OVERVOLUME_TITLE                 ( 448 )
#define STR_YOU_TURN_TITLE                   ( 449 )
#define STR_TURN_BASED_TITLE                 ( 450 )

// Radio
const hash StrRadioMain = 455;
const hash StrRadioChannel = 456;
const hash StrRadioRefresh = 457;
const hash StrRadioBroadcastSend = 458;
const hash StrRadioBroadcastRecv = 459;
const hash StrRadioBroadcast1 = 460;
#define STR_RADIO_BROADCAST2                 ( 461 )
#define STR_RADIO_BROADCAST3                 ( 462 )
#define STR_RADIO_BROADCAST4                 ( 463 )
#define STR_RADIO_BROADCAST5                 ( 464 )
const hash StrRadioBroadcastSendBegin = 465;
const hash StrRadioBroadcastSendEnd = 466;
const hash StrRadioBroadcastSendChange = 467;
const hash StrRadioBroadcastRecvBegin = 468;
const hash StrRadioBroadcastRecvEnd = 469;
const hash StrRadioBroadcastRecvChange = 470;
const hash StrRadioChannelChanged = 471;
const hash StrRadioCantShiftChannel = 474;
const hash StrRadioCantShiftSend = 475;
const hash StrRadioCantShiftRecv = 476;
const hash StrRadioCantShiftBcSend = 477;
const hash StrRadioCantShiftBcRecv = 478;
#define STR_RADIO_CANT_SEND                  ( 479 ) // Hardcoded

// Barter
#define STR_BARTER_GOOD_OFFER                ( 480 )
#define STR_BARTER_BAD_OFFER                 ( 481 )
const hash StrBarterOverweight = 482;
const hash StrBarterOversize = 483;
#define STR_BARTER_SALE_ITEM_NOT_FOUND       ( 484 )
#define STR_BARTER_BUY_ITEM_NOT_FOUND        ( 485 )
#define STR_BARTER_NO_BARTER_NOW             ( 486 )
const hash StrBarterNoBarterMode = 487;
#define STR_BARTER_DIALOGBOX                 ( 490 )
#define STR_BARTER_OPEN_MODE                 ( 491 )
#define STR_BARTER_HIDE_MODE                 ( 492 )
#define STR_BARTER_BEGIN_FAIL                ( 493 )
#define STR_BARTER_BEGIN                     ( 495 )
#define STR_BARTER_READY_OFFER               ( 496 )
const hash StrBarterOnlyCash = 497;
const hash StrBarterItemNotAllowed = 498;

// Items info
// Deterioration
const hash StrDeteriorationProcent = 500;
const hash StrDeteriorationService = 501;
const hash StrDeteriorationServiceExt = 502;
const hash StrDeteriorationBrokenLow = 503;
const hash StrDeteriorationBrokenNorm = 504;
const hash StrDeteriorationBrokenHigh = 505;
const hash StrDeteriorationNoResc = 506;
const hash StrDeteriorationBrokenCount = 507;
#define STR_DETERIORATION_SERVICE_ALREADY    ( 510 )
const hash StrDeteriorationServiceSucc = 511;
const hash StrDeteriorationServiceFail = 512;
const hash StrDeteriorationRepairSucc = 515;
const hash StrDeteriorationRepairFail = 516;
#define STR_DETERIORATION_ARMOR_BROKEN       ( 520 )
const hash StrDeteriorationWeaponBroken = 521;
// Key
const hash StrInvKeyNumber = 550;
// Car
#define STR_INV_CAR_NUMBER                   ( 560 )
const hash StrInvCarFuel = 561;
const hash StrInvCarDeterioration = 562;

// PipBoy
#define STR_QUEST_NAME                       # (index)           uint( hash( index ) + GetStrHash( "QName" ) )
#define STR_QUEST_DESC                       # (index)           uint( hash( index ) + GetStrHash( "QDesc" ) )
#define STR_QUEST_STATUS                     # ( index, value )uint( hash( index ) + hash( value ) )

const hash StrPipStatus = 700;
const hash StrPipReplicationMoney = 701;
const hash StrPipReplicationMoneyVal = 702;
const hash StrPipReplicationCost = 703;
const hash StrPipReplicationCostVal = 704;
const hash StrPipReplicationCount = 705;
const hash StrPipReplicationCountVal = 706;
const hash StrPipQuests = 720;
const hash StrPipScores = 723;
#define STR_PIP_MAPS                         ( 725 )
const hash StrPipInfo = 730;
// Timeouts
const hash StrPipTimeouts = 740;
const hash StrTimeoutSeconds = 741;
#define STR_TIMEOUT_MINUTES                  ( 742 )
const hash StrTimeoutTransferWait = 790;
const hash StrTimeoutBattleWait = 791;
const hash StrTimeoutSneakWait = 792;
// Automaps
#define STR_AUTOMAP_LOADING                  ( 795 )
#define STR_AUTOMAP_LOADING_ERROR            ( 796 )

// Dialog
#define STR_DIALOG_CANT_TALK_WITH_MOB        ( 800 )
#define STR_DIALOG_NPC_NOT_LIFE              ( 801 )
#define STR_DIALOG_NPC_BUSY                  ( 802 )
#define STR_DIALOG_DIST_TOO_LONG             ( 803 )
#define STR_DIALOG_NO_DIALOGS                ( 804 )
#define STR_DIALOG_MANY_TALKERS              ( 805 )
#define STR_DIALOG_PRE_INST_FAIL             ( 806 )
#define STR_DIALOG_FROM_LINK_NOT_FOUND       ( 807 )
#define STR_DIALOG_COMPILE_FAIL              ( 808 )
#define STR_DIALOG_NPC_NOT_FOUND             ( 809 )
#define STR_DIALOG_ANSWER_NULLPTR            ( 810 )

// Global
#define STR_GLOBAL_LOCATION_NOT_FOUND        ( 900 )
#define STR_GLOBAL_LOCATION_REMOVED          ( 901 )
#define STR_GLOBAL_PLACE_NOT_FOUND           ( 902 )
#define STR_GLOBAL_CAR_PLACE_NOT_FOUND       ( 903 )
#define STR_GLOBAL_PLAYERS_OVERFLOW          ( 904 )
#define STR_FOLLOW_PREP                      ( 950 )
#define STR_FOLLOW_FORCE                     ( 952 )
#define STR_FOLLOW_UNKNOWN_CRNAME            ( 970 )
#define STR_FOLLOW_GMNAME                    ( 972 )

// Net
#define STR_NET_WRONG_LOGIN                  ( 1001 )
#define STR_NET_WRONG_PASS                   ( 1002 )
#define STR_NET_ACCOUNT_ALREADY              ( 1003 )
#define STR_NET_PLAYER_IN_GAME               ( 1004 )
const hash StrNetWrongSpecial = 1005;
#define STR_NET_REG_SUCCESS                  ( 1006 )
#define STR_NET_CONNECTION                   ( 1007 )
#define STR_NET_CONN_ERROR                   ( 1008 )
const hash StrNetLoginpassWrong = 1009;
#define STR_NET_CONN_SUCCESS                 ( 1010 )
#define STR_NET_HEXES_BUSY                   ( 1012 )
#define STR_NET_DISCONN_BY_DEMAND            ( 1013 )
#define STR_NET_WRONG_NAME                   ( 1014 )
#define STR_NET_WRONG_CASES                  ( 1015 )
#define STR_NET_WRONG_GENDER                 ( 1016 )
#define STR_NET_WRONG_AGE                    ( 1017 )
#define STR_NET_CONN_FAIL                    ( 1018 )
#define STR_NET_WRONG_DATA                   ( 1019 )
#define STR_NET_STARTLOC_FAIL                ( 1020 )
#define STR_NET_STARTMAP_FAIL                ( 1021 )
#define STR_NET_STARTCOORD_FAIL              ( 1022 )
#define STR_NET_BD_ERROR                     ( 1023 )
#define STR_NET_WRONG_NETPROTO               ( 1024 )
#define STR_NET_DATATRANS_ERR                ( 1025 )
#define STR_NET_NETMSG_ERR                   ( 1026 )
#define STR_NET_SETPROTO_ERR                 ( 1027 )
#define STR_NET_LOGINOK                      ( 1028 )
const hash StrNetWrongTagskill = 1029;
const hash StrNetDifferentLang = 1030;
const hash StrNetManySymbols = 1031;
const hash StrNetBeginEndSpaces = 1032;
const hash StrNetTwoSpace = 1033;
#define STR_NET_BANNED                       ( 1034 )
#define STR_NET_NAME_WRONG_CHARS             ( 1035 )
const hash StrNetPassWrongChars = 1036;
#define STR_NET_FAIL_TO_LOAD_IFACE           ( 1037 )
#define STR_NET_FAIL_RUN_START_SCRIPT        ( 1038 )
#define STR_NET_LANGUAGE_NOT_SUPPORTED       ( 1039 )
const hash StrInvalidResolution = 1040;
#define STR_NET_KNOCK_KNOCK                  ( 1041 )
#define STR_NET_REGISTRATION_IP_WAIT         ( 1042 )
#define STR_NET_BANNED_IP                    ( 1043 )
#define STR_NET_UID_FAIL                     ( 1044 )
#define STR_NET_TIME_LEFT                    ( 1045 )
#define STR_NET_BAN                          ( 1046 )
#define STR_NET_BAN_REASON                   ( 1047 )
#define STR_NET_LOGIN_SCRIPT_FAIL            ( 1048 )
const hash StrNetPermanentDeath = 1049;

#define STR_SP_SAVE_SUCCESS                  ( 1070 )
#define STR_SP_SAVE_FAIL                     ( 1071 )
#define STR_SP_LOAD_SUCCESS                  ( 1072 )
#define STR_SP_LOAD_FAIL                     ( 1073 )
#define STR_SP_NEW_GAME_SUCCESS              ( 1074 )
#define STR_SP_NEW_GAME_FAIL                 ( 1075 )

// Parameters
#define STR_PARAM_NAME                       # (prop)         uint( MsgStr::MakePropHashForMsg( prop ) + GetStrHash( "Name" ) )
#define STR_PARAM_DESC                       # (prop)         uint( MsgStr::MakePropHashForMsg( prop ) + GetStrHash( "Desc" ) )
#define STR_PARAM_NAME_SHORT                 # (prop)         uint( MsgStr::MakePropHashForMsg( prop ) + GetStrHash( "ShortName" ) )
#define STR_PARAM_PIC                        # (prop)         uint( MsgStr::MakePropHashForMsg( prop ) + GetStrHash( "Pic" ) )
#define STR_KILL_NAME                        # (index) ( 102600 + ( index ) * 10 + 1 )
#define STR_KILL_DESC                        # (index) ( 102600 + ( index ) * 10 + 2 )
#define STR_ADDICTION_NAME                   # (index) ( 104700 + ( index ) * 10 + 1 )
#define STR_ADDICTION_DESC                   # (index) ( 104700 + ( index ) * 10 + 2 )
#define STR_REPUTATION_NAME                  # (index) ( 105700 + ( index ) * 10 + 1 )
#define STR_REPUTATION_DESC                  # (index) ( 105700 + ( index ) * 10 + 2 )
#define STR_STAT_LEVEL                       # (val)           ( ( val ) > 10 ? ( 2310 ) : ( ( val ) < 1 ? ( 2301 ) : 2300 + ( val ) ) )
#define STR_STAT_LEVEL_ABB                   # (val)       ( ( val ) > 10 ? ( 2320 ) : ( ( val ) < 1 ? ( 2311 ) : 2310 + ( val ) ) )
#define STR_NEXT_LEVEL_NAME                  ( 4001 )
#define STR_UNSPENT_SKILL_POINTS_NAME        ( 4002 )
#define STR_LEVEL_NAME                       ( 4003 )
#define STR_EXPERIENCE_NAME                  ( 4004 )
#define STR_REPUTATIONS_NAME                 ( 4005 )
#define STR_KARMA_NAME                       ( 4006 )
const hash StrPerksName = 4007;
#define STR_KILLS_NAME                       ( 4008 )
const hash StrTraitsName = 4011;
const hash StrMaleName = 4107;
const hash StrFemaleName = 4108;
#define STR_NEXT_LEVEL_DESC                  ( 4051 )
#define STR_UNSPENT_SKILL_POINTS_DESC        ( 4052 )
#define STR_LEVEL_DESC                       ( 4053 )
#define STR_EXPERIENCE_DESC                  ( 4054 )
#define STR_REPUTATION_DESC                  ( 4055 )
#define STR_KARMA_DESC                       ( 4056 )
#define STR_PERKS_DESC                       ( 4057 )
#define STR_KILLS_DESC                       ( 4058 )
#define STR_TRAITS_DESC                      ( 4061 )

const hash StrGainLevelup = 4090;
const hash StrGainExperience = 4091;

const hash StrSwitchPerksName = 4109;
const hash StrSwitchKarmaName = 4110;
const hash StrSwitchKillsName = 4111;

// Skills
const hash StrSkillNoressurect = 3400;
const hash StrSkillWeariness = 3401;
const hash StrSkillNoneedFirstaid = 3402;
const hash StrSkillNoneedDoctor = 3403;
const hash StrSkillNofirstaidNeeddoctor = 3404;
const hash StrSkillNodoctorNeedfirstaid = 3405;
#define STR_SKILL_HEAL_DMG                   # (dmg)       ( 3410 + ( dmg ) )
#define STR_SKILL_NOHEAL_DMG                 # (dmg)     ( 3420 + ( dmg ) )
#define STR_SKILL_STEAL_TRIED_GET            ( 3430 )
#define STR_SKILL_STEAL_TRIED_PUT            ( 3431 )
const hash StrSkillLockpickFail = 3440;
const hash StrSkillTrapsSetFail = 3441;
const hash StrSkillTrapsSetSucc = 3442;
const hash StrSkillTrapsFail = 3443;
const hash StrSkillTrapsSucc = 3444;
#define STR_SKILL_SNEAK_VISIBLE              ( 3445 )

// Skilldex
#define STR_SKILLDEX_NAME                    ( 3340 )
#define STR_SKILLDEX_CANCEL                  ( 3341 )

// Character
const hash StrChaLevel = 4113;
const hash StrChaExperience = 4114;
const hash StrChaNextLevel = 4115;

// Damage
#define STR_DMG_LIFE                         ( 4250 )

// Karma, reputation
const hash StrKarmaGenGenName = 6000;
#define STR_KARMA_GEN_GEN_NAME2              ( 6001 )
#define STR_KARMA_GEN_GEN_DESC               ( 6002 )
#define STR_KARMA_GEN_COUNT                  ( 6099 )
#define STR_KARMA_GEN_VAL                    # (num)        ( 6100 + ( num ) * 3 )
#define STR_KARMA_GEN_NAME                   # (num)       ( 6100 + ( num ) * 3 + 1 )
#define STR_KARMA_GEN_SKILLDEX               # (num)   ( 6100 + ( num ) * 3 + 2 )

const hash StrTownrepTitleName = 6405;
#define STR_TOWNREP_TITLE_DESC               ( 6406 )
#define STR_TOWNREP_RATIO_NAME               # (val)   ( 6500 + ( ( val ) >= __ReputationLoved ? 0 : ( ( val ) >= __ReputationLiked ? 1 : ( ( val ) >= __ReputationAccepted ? 2 : ( ( val ) >= __ReputationNeutral ? 3 : ( ( val ) >= __ReputationAntipathy ? 4 : ( ( val ) >= __ReputationHated ? 5 : 6 ) ) ) ) ) ) )
#define STR_TOWNREP_RATIO_DESC               # (val)   ( 6550 + ( ( val ) >= __ReputationLoved ? 0 : ( ( val ) >= __ReputationLiked ? 1 : ( ( val ) >= __ReputationAccepted ? 2 : ( ( val ) >= __ReputationNeutral ? 3 : ( ( val ) >= __ReputationAntipathy ? 4 : ( ( val ) >= __ReputationHated ? 5 : 6 ) ) ) ) ) ) )

const hash StrAddictTitleName = 6900;
#define STR_ADDICT_TITLE_DESC                ( 6901 )

// Kills
#define STR_KILL_NAME                        # (num)            ( 8000 + ( num ) )
#define STR_KILL_DESC                        # (num)            ( 8100 + ( num ) )

// Items
const hash StrItemLook = 10000;
#define STR_ITEM_LOOK_INFO                   ( 10001 )
const hash StrItemLookNothing = 10010;
#define STR_ITEM_NOT_FOUND                   ( 10020 )
const hash StrItemLockerNeedKey = 10100;
const hash StrUseNothing = 10202;
const hash StrSolarScorcherNoLight = 10240;
const hash StrCarFuelTankFill = 10250;
const hash StrCarFuelTankFull = 10251;
const hash StrCarRepairSuccess = 10252;
const hash StrCarRepairNoNeed = 10253;
const hash StrCarFuelNotSupported = 10254;
const hash StrCarFuelEmpty = 10255;
const hash StrCarBroken = 10256;
const hash StrCarCritOverload = 10257;
const hash StrCritBadCharisma = 10258;
const hash StrCantKickOnWater = 10259;
// Drugs
const hash StrDrugStatGain = 10300;
const hash StrDrugStatLose = 10301;
const hash StrDrugAddictionEnd = 10302;
#define STR_DRUG_DEAD                        ( 10303 )
const hash StrDrugNothingHappens = 10304;
#define STR_DRUG_PARISH                      ( 10305 )
const hash StrDrugUseOnSucc = 10306;
const hash StrDrugUseOnFail = 10307;
// Books
#define STR_BOOK_READ_SUCCESS                ( 10450 )
const hash StrBookReadFail = 10451;
const hash StrBookReadScience = 10452;
const hash StrBookReadRepair = 10453;
const hash StrBookReadFisrtAid = 10454;
const hash StrBookReadSmallGuns = 10455;
const hash StrBookReadEnergyWeapons = 10456;
const hash StrBookReadOutdoorsman = 10457;
// Grave
const hash StrGraveUncovered = 10550;
const hash StrGraveCovered = 10551;

// Caliber
#define STR_CALIBER                          # (num)              ( 10900 + ( num ) )

// Critters
#define STR_CRIT_LOOK1                       # (gen)                   ( 11000 + ( gen ) * 1000 )
#define STR_CRIT_LOOK1_SELF                  # (gen)              ( 11001 + ( gen ) * 1000 )
#define STR_CRIT_LOOK2                       # (gen)                   ( 11002 + ( gen ) * 1000 )
#define STR_CRIT_LOOK3                       # (gen)                   ( 11003 + ( gen ) * 1000 )
#define STR_CRIT_LOOK_SELF                   # (gen)               ( 11005 + ( gen ) * 1000 )
const hash StrCritLookLife = 11010;
const hash StrCritLookKo = 11011;
const hash StrCritLookDead = 11012;
#define STR_CRIT_LOOK_CRITICAL_DEAD          ( 11013 )
const hash StrCritLookNothing = 11014;
#define STR_CRIT_LOOK_AGE                    # ( gen, age )( 11100 + ( ( age ) > 99 ? 99 : ( age ) ) + ( gen ) * 1000 )
#define STR_CRIT_LOOK_COND                   # ( gen, main, ext )( 11200 + ( main ) * 10 + ( ext ) + ( gen ) * 1000 )
#define STR_CRIT_LOOK_SPEC                   # ( gen, num, val )( 11300 + ( num ) * 10 + ( ( val ) > 10 ? 10 : ( val ) ) + ( gen ) * 1000 )
#define STR_CRIT_LOOK_DMG                    # ( gen, dmg )( 11400 + ( dmg ) + ( gen ) * 1000 )
#define STR_CRIT_LOOK_PERK                   # ( gen, perk )( 11500 + ( perk ) + ( gen ) * 1000 )
// Fallout system
#define STR_CRIT_LOOK_WHO                    # (gender)             ( 12500 + ( gender ) )
#define STR_CRIT_LOOK_STATE                  # (num)              ( 12510 + ( num ) )
#define STR_CRIT_LOOK_LIMBS                  # ( gender, unhurt )( 12520 + ( gender ) * 2 + ( unhurt ? 1 : 0 ) )
#define STR_CRIT_LOOK_HP                     # (gender)              ( 12530 + ( gender ) )
const hash StrCritLookWeap = 12540;
const hash StrCritLookWeapAmmo = 12541;
const hash StrCritLookMisc = 12542;

const hash StrCritterCantMove = 12600;

// Scores
#define STR_SCORES_TITLE                     # (score)       ( 13000 + ( score ) * 10 )
#define STR_SCORES_NAME                      # (score)        ( 13000 + ( score ) * 10 + 1 )

// 3d attributes
#define STR_BODY_TYPE                        # (type)         ( 150100 + ( type ) )
#define STR_SKIN_COLOR                       # (color)        ( 151000 + ( color ) )
#define STR_HAIR_COLOR                       # (color)        ( 151200 + ( color ) )
#define STR_HAIR_MALE                        # (type)         ( 152000 + ( type ) * 10 )
#define STR_HAIR_FEMALE                      # (type)         ( 152200 + ( type ) * 10 )
#define STR_MUSTACHE                         # (type)         ( 153000 + ( type ) * 10 )
#define STR_PONYTAIL                         # (type)         ( 154000 + ( type ) * 10 )
#define STR_BEARD                            # (type)         ( 155000 + ( type ) * 10 )

// Intellect words
#define STR_INTELLECT_WORDS                  ( 1999000000 )
#define STR_INTELLECT_SYMBOLS                ( 1999000001 )

// Help
const hash StrGameHelp = 2000000000;

// Credits
const hash StrGameCreditsSpeed = 2000001000;
const hash StrGameCredits = 2000001010;
#define STR_GAME_CREDITS_EXT                 ( 2000001020 )

// ***************************************************************************************
// ***  FOOBJ.MSG  ***********************************************************************
// ***************************************************************************************

#define STR_ITEM_NAME                        # (item)           ( ITEMSTR( item.ProtoId, 1 + item.Info ) )
#define STR_ITEM_INFO                        # (item)           ( ITEMSTR( item.ProtoId, 2 + item.Info ) )

// ***************************************************************************************
// ***  FOLOCATIONS.MSG  *****************************************************************
// ***************************************************************************************

// Global map info
#define STR_LOC_NAME                         # (pid) LOCSTR( pid, 1 )
#define STR_LOC_INFO                         # (pid) LOCSTR( pid, 2 )
#define STR_LOC_PIC                          # (pid) LOCSTR( pid, 5 )
#define STR_LOC_LABEL_PIC                    # (pid) LOCSTR( pid, 6 )
#define STR_LOC_MAP_NAME                     # ( pid, mapInd )LOCSTR( pid, 1000 + ( mapInd ) * 10 + 0 )
#define STR_LOC_MAP_MUSIC                    # ( pid, mapInd )LOCSTR( pid, 1000 + ( mapInd ) * 10 + 1 )
#define STR_LOC_MAP_AMBIENT                  # ( pid, mapInd )LOCSTR( pid, 1000 + ( mapInd ) * 10 + 2 )
#define STR_LOC_ENTRANCE_NAME                # ( pid, ent )LOCSTR( pid, 2000 + ( ent ) * 10 + 0 )
#define STR_LOC_ENTRANCE_PICX                # ( pid, ent )LOCSTR( pid, 2000 + ( ent ) * 10 + 1 )
#define STR_LOC_ENTRANCE_PICY                # ( pid, ent )LOCSTR( pid, 2000 + ( ent ) * 10 + 2 )

// ***************************************************************************************
// ***  FODLG.MSG  ***********************************************************************
// ***************************************************************************************

#define STR_NPC_PROTO_NAME                   # (pid)     ( CRSTR( pid, 1 ) )
#define STR_NPC_PROTO_DESC                   # (pid)     ( CRSTR( pid, 2 ) )
#define STR_NPC_NAME                         # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 10 : STR_NPC_PROTO_NAME( pid ) )
#define STR_NPC_NAME_DLG                     # (dlg)     ( ( ( dlg ) & 0xFFFFC000 ) | 10 )
#define STR_NPC_AVATAR                       # (dlg)     ( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 11 : 0 )
#define STR_NPC_INFO_LIFE                    # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 20 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_FULL_INFO_LIFE               # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 21 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_INFO_KO                      # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 22 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_FULL_INFO_KO                 # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 23 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_INFO_DEAD                    # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 24 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_FULL_INFO_DEAD               # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 25 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_INFO_CRITICAL_DEAD           # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 26 : STR_NPC_PROTO_DESC( pid ) )
#define STR_NPC_FULL_INFO_CRITICAL_DEAD      # ( dlg, pid )( ( dlg ) != 0 ? ( ( dlg ) & 0xFFFFC000 ) | 27 : STR_NPC_PROTO_DESC( pid ) )

// ***************************************************************************************
// ***  FOQUEST.MSG  *********************************************************************
// ***************************************************************************************

const hash StrQuestNumber = 4;
const hash StrQuestProcess = 5;
#define STR_QUEST_MAP                        # (num)            ( ( num ) * 1000 + 101 )
#define STR_QUEST_INFO                       # (num)           ( ( num ) * 1000 + 102 )

// ***************************************************************************************
// ***  FOHOLO.MSG, FOUSERHOLO.MSG  ******************************************************
// ***************************************************************************************

const hash StrHoloReadSucc = 1;
const hash StrHoloReadFail = 2;
const hash StrHoloReadAlready = 3;
const hash StrHoloReadMemoryFull = 4;
const hash StrHoloEraseSucc = 5;
const hash StrHoloEraseFail = 6;
const hash StrHoloWriteSucc = 7;
const hash StrHoloWriteFail = 8;
#define STR_HOLO_INFO_NAME                   # (num)       ( ( num ) * 10 )
#define STR_HOLO_INFO_DESC                   # (num)       ( ( num ) * 10 + 1 )

// ***************************************************************************************
// ***  FOCOMBAT.MSG  ********************************************************************
// ***************************************************************************************

const hash StrCombatNeedAp = 100;
#define STR_COMBAT_NEED_OUT_OF_AMMO          ( 101 )
#define STR_COMBAT_NEED_OUT_OF_RANGE         ( 102 )
#define STR_COMBAT_NEED_CANNOT_END           ( 103 )
#define STR_COMBAT_NEED_AIM_BLOCKED          ( 104 )
const hash StrCombatNeedDmgTwoArms = 105;
const hash StrCombatNeedDmgArm = 106;
#define STR_COMBAT_NEED_LOW_STRENGTH         ( 107 )

// ***************************************************************************************
// ***  FOINTERNAL.MSG  ******************************************************************
// ***************************************************************************************

#define STR_INTERNAL_SCRIPT_MODULES          ( 100 )
#define STR_INTERNAL_SCRIPT_DLLS             ( 50000 )
#define STR_INTERNAL_SCRIPT_PRAGMAS          ( 90000 )
#define STR_INTERNAL_SCRIPT_VERSION          ( 99998 )
#define STR_INTERNAL_SCRIPT_CONFIG           ( 99999 )
#define STR_INTERNAL_CRTYPE                  # (num)      ( 100000 + ( num ) )

// ***************************************************************************************
// ***************************************************************************************
// ***************************************************************************************
