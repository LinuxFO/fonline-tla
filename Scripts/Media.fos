// FOS Server Client
#pragma rpc Client DoPlayVideo (int canStop, int, string videoName )
#pragma rpc Client DoPlayMusic (int pos, int repeat, int, string musicName )
// Author: cvet

// Templates:
// import void PlayMusic(Critter cr, string musicName, uint pos, uint repeat) from "Media";
// import void PlayMusic(Map map, string musicName, uint pos, uint repeat) from "Media";
// import void PlayVideo(Critter cr, string videoName, bool canStop) from "Media";
// import void PlayVideo(Map map, string videoName, bool canStop) from "Media";

//#include "Tla"

#ifdef __SERVER
void PlayMusic( Critter cr, string musicName, uint pos, uint repeat ) // Export
{
    if( cr.IsPlayer() )
        cr.Rpc.DoPlayMusic( int(pos), int(repeat), 0, musicName );
}

void PlayMusic( Map map, string musicName, uint pos, uint repeat ) // Export
{
    Critter[] critters = {};
    Obsolete::GetCritters( map,  0, FIND_ALL | FIND_ONLY_PLAYERS, critters  );
    for( uint i = 0, j = critters.length(); i < j; i++ )
        critters[ i ].Rpc.DoPlayMusic( int(pos), int(repeat), 0, musicName );
}

void PlayVideo( Critter cr, string videoName, bool canStop ) // Export
{
    if( cr.IsPlayer() )
        cr.Rpc.DoPlayVideo( canStop ? 1 : 0, 0, videoName );
}

void PlayVideo( Map map, string videoName, bool canStop ) // Export
{
    Critter[] critters = {};
    Obsolete::GetCritters( map,  0, FIND_ALL | FIND_ONLY_PLAYERS, critters  );
    for( uint i = 0, j = critters.length(); i < j; i++ )
        critters[ i ].Rpc.DoPlayVideo( canStop ? 1 : 0, 0, videoName );
}
#endif

#ifdef __CLIENT
// Music/Video, see media.fos
void DoPlayMusic (int pos, int repeat, int, string musicName )
{
    PlayMusic( musicName, uint( repeat ) );
}

void DoPlayVideo (int canStop, int, string videoName )
{
    PlayVideo( videoName, canStop != 0 );
}
#endif
